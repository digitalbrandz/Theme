{% assign min = 0 %}
{% assign max = 100000 %}
{% assign diff = max | minus: min %}
{% assign randomNumber = "now" | date: "%N" | modulo: diff | plus: min %}

{% style %}
  body.{{ template | replace: '.', '' }} header {
     background:none;
  }
  body.{{ template | replace: '.', '' }} #footer {
     display:none;   
  }
 body.{{ template | replace: '.', '' }} header .header-wrap:before {
     transform: translateX(-100%);
 }
body.{{ template | replace: '.', '' }} header .header-wrap .row .logo-wrap ~ div, body.{{ template | replace: '.', '' }} header .header-wrap  .bottom-header, body.{{ template | replace: '.', '' }} header .header-wrap  .search {   
          opacity:0;
          pointer-events:none;
}
body.{{ template | replace: '.', '' }} header .header-wrap .row .logo-wrap a {  
  position:relative;
}
body.{{ template | replace: '.', '' }} header .header-wrap .row .logo-wrap a:after {
  content: '{{ section.settings.title }}';
    display: block;
    text-align: right;
    text-transform: uppercase;
    color: #fff;
    font-size: 11px;
    letter-spacing: 9px;
    transform: translate(-12px,5px);
    position: absolute;
    text-align: right;
    width: 100%;  
    opacity: 0;
    animation: thefade 0.3s ease-in-out 0.4s both;  
}
  
@media only screen and (max-width: 1022px) {
body.{{ template | replace: '.', '' }} header .header-wrap .row .logo-wrap a:after {
      font-size: 6px;
      letter-spacing: 7px;
}
}  
  
  #{{ template | replace: '.', '' }} {
  {% if section.settings.background_color_2 contains 'transparent' %}
      background-color:{{ section.settings.background_color }};                            
  {% else %}     
    background: -moz-radial-gradient(center, ellipse cover, {{ section.settings.background_color }}, {{ section.settings.background_color_2 }});
    background: -webkit-radial-gradient(center, ellipse cover, {{ section.settings.background_color }}, {{ section.settings.background_color_2 }});
    background: radial-gradient(ellipse at center,{{ section.settings.background_color }}, {{ section.settings.background_color_2 }});                            
  {% endif %}
  }
  

@keyframes thefade {
    0%  {  opacity: 0; }
    100%  { opacity: 1;}
}
  
/* Style */
  
#container-{{ randomNumber }} .advancedform-wrapper .fs-form.fs-form-full .fs-fields>li label.fs-field-label, #container-{{ randomNumber }} .fs-controls .fs-numbers {
  color:{{ section.settings.label_color }};
}
#container-{{ randomNumber }} .advancedform-wrapper .fs-form.fs-form-full .fs-fields>li select {
  color:{{ section.settings.input_color }};
  border-color:{{ section.settings.input_color }};
} 

#container-{{ randomNumber }} .advancedform-wrapper .fs-form.fs-form-full .fs-fields>li input  {
  color:{{ section.settings.input_color }};
}

  
#container-{{ randomNumber }} .fs-controls button.fs-continue {
border-color: {{ section.settings.label_color }};
color: {{ section.settings.label_color }};  
}
  
 #container-{{ randomNumber }} .fs-controls button.fs-continue:hover { 
  background:{{ section.settings.button_hover_background_color }};
  border-color:{{ section.settings.button_hover_background_color }};
  color:{{ section.settings.button_hover_color }};
 }
  
#container-{{ randomNumber }} .fs-nav-dots button::before, #container-{{ randomNumber }} .fs-nav-dots button::after { 
  background-color: {{ section.settings.navigation_color }};  
}
  
#container-{{ randomNumber }} .fs-nav-dots button:hover::before, #container-{{ randomNumber }} .fs-nav-dots button.fs-dot-current::before { 
  background-color: {{ section.settings.navigation_active_color }};  
}  


#container-{{ randomNumber }} .advancedform-wrapper .fs-form.fs-form-full .fs-fields>li .fs-radio-custom span label {
  color:{{ section.settings.button_input_color }};
  background-color:{{ section.settings.button_input_background_color }};
} 

#container-{{ randomNumber }} .advancedform-wrapper .fs-form.fs-form-full .fs-fields>li .fs-radio-custom span input[type="radio"]:checked+label {
  color:{{ section.settings.button_input_selected_color }};
  background-color:{{ section.settings.button_input_selected_background_color }};
}



{% if section.settings.css != nil %}
{{ section.settings.css }}
{% endif %} 
{% endstyle %}

  <div id="container-{{ randomNumber }}" class="container" style="opacity:0">
			<div class="fs-form-wrap">
               <div class="advancedform-wrapper">
                <form class="fs-form fs-form-full" autocomplete="off" slack="{{ section.settings.webhook }}">
					<ol class="fs-fields">


{% assign i = 1 %}
{% assign tabindex = 1 %}                      
{% for block in section.blocks %}
{% case block.type %}
                                   
                      
{% when 'Youtube' %}                      
                      
<li class="{% if block.settings.conditional and block.settings.conditional_block_id != '' and block.settings.conditional_block_value != '' %}conditional{% endif %} video" data-link-trigger>
  <label priority="{{ block.settings.priority  }}" class="fs-field-label fs-anim-upper" for="af-{{ section.id }}-q{{ i }}"> {{ block.settings.title }}</label>
 
  <div class="fs-radio-group fs-radio-custom bigbuttons clearfix fs-anim-lower">
    <div class="video-wrap">
      <iframe width="560" height="315" src="https://www.youtube.com/embed/{{ block.settings.youtube_url.id }}?playsinline=1&version=3&enablejsapi=1" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
    </div>
    <div>
      <a href="#">{{ block.settings.button_text }}</a>
    </div>
  </div>                  
</li>                      
 
                      
                      
{% when 'Name' %}
<li id="{{ block.id }}" class="{% if block.settings.conditional and block.settings.conditional_block_id != '' and block.settings.conditional_block_value != '' %}skip{% endif %}">
  <label priority="{{ block.settings.priority  }}" class="fs-field-label fs-anim-upper" for="af-{{ section.id }}-q{{ i }}"> {{ block.settings.question }}{% if section.settings.required %}<span class="required">*</span>{% endif %}</label>
	<input class="fs-anim-lower" tabindex="{{ tabindex }}" id="af-{{ section.id }}-q{{ i }}" name="af-{{ section.id }}-q{{ i }}" type="text" placeholder="{{ block.settings.placeholder }}" {% if block.settings.required != false %}required{% endif %}/>
</li>
{% assign tabindex = tabindex | plus: 1 %}             
{% when 'Email' %}
<li id="{{ block.id }}" class="{% if block.settings.conditional and block.settings.conditional_block_id != '' and block.settings.conditional_block_value != '' %}skip{% endif %}">
  <label priority="{{ block.settings.priority  }}" class="fs-field-label fs-anim-upper" for="af-{{ section.id }}-q{{ i }}"> {{ block.settings.question }}{% if section.settings.required %}<span class="required">*</span>{% endif %}</label>
	<input class="fs-anim-lower" tabindex="{{ tabindex }}" id="af-{{ section.id }}-q{{ i }}" name="af-{{ section.id }}-q{{ i }}" type="text" placeholder="{{ block.settings.placeholder }}" {% if block.settings.required != false %}required{% endif %}/>
</li>
{% assign tabindex = tabindex | plus: 1 %}    
{% when 'Phone' %}
<li id="{{ block.id }}" class="{% if block.settings.conditional and block.settings.conditional_block_id != '' and block.settings.conditional_block_value != '' %}skip{% endif %}">
  <label priority="{{ block.settings.priority  }}" class="fs-field-label fs-anim-upper" for="af-{{ section.id }}-q{{ i }}"> {{ block.settings.question }}{% if section.settings.required != false %}<span class="required">*</span>{% endif %}</label>
	<input class="fs-anim-lower" tabindex="{{ tabindex }}" id="af-{{ section.id }}-q{{ i }}" name="af-{{ section.id }}-q{{ i }}" type="text" {% if block.settings.required != false %}required{% endif %}/>
</li>
{% assign tabindex = tabindex | plus: 1 %}    
{% when 'Url' %}
<li id="{{ block.id }}" class="{% if block.settings.conditional and block.settings.conditional_block_id != '' and block.settings.conditional_block_value != '' %}skip{% endif %}">
  <label priority="{{ block.settings.priority  }}" class="fs-field-label fs-anim-upper" for="af-{{ section.id }}-q{{ i }}"> {{ block.settings.title }}{% if section.settings.required %}<span class="required">*</span>{% endif %}</label>
	<input class="fs-anim-lower" tabindex="{{ tabindex }}" id="af-{{ section.id }}-q{{ i }}" name="af-{{ section.id }}-q{{ i }}" type="text" placeholder="{{ block.settings.placeholder }}" {% if block.settings.required != false %}required{% endif %}/>
</li>
{% assign tabindex = tabindex | plus: 1 %}                           
{% when 'TextInput' %}
<li id="{{ block.id }}" class="{% if block.settings.conditional and block.settings.conditional_block_id != '' and block.settings.conditional_block_value != '' %}skip{% endif %}">
  <label priority="{{ block.settings.priority  }}" class="fs-field-label fs-anim-upper" for="af-{{ section.id }}-q{{ i }}"> {{ block.settings.title }}{% if section.settings.required %}<span class="required">*</span>{% endif %}</label>
	<input class="fs-anim-lower" tabindex="{{ tabindex }}" id="af-{{ section.id }}-q{{ i }}" name="af-{{ section.id }}-q{{ i }}" type="text" placeholder="{{ block.settings.placeholder }}" {% if block.settings.required != false %}required{% endif %}/>
</li>
{% assign tabindex = tabindex | plus: 1 %}                                   
{% when 'TextArea' %}
<li id="{{ block.id }}" class="{% if block.settings.conditional and block.settings.conditional_block_id != '' and block.settings.conditional_block_value != '' %}skip{% endif %}">
  <label priority="{{ block.settings.priority  }}" class="fs-field-label fs-anim-upper" for="af-{{ section.id }}-q{{ i }}"> {{ block.settings.title }}{% if section.settings.required %}<span class="required">*</span>{% endif %}</label>
      <textarea class="fs-anim-lower" tabindex="{{ tabindex }}" id="af-{{ section.id }}-q{{ i }}" name="af-{{ section.id }}-q{{ i }}" type="textarea" rows="10" cols="50"></textarea>
</li>
{% assign tabindex = tabindex | plus: 1 %}      
{% when 'DropDown' %}
<li id="{{ block.id }}" class="{% if block.settings.conditional and block.settings.conditional_block_id != '' and block.settings.conditional_block_value != '' %}skip{% endif %}" data-input-trigger>
  <label priority="{{ block.settings.priority  }}" class="fs-field-label fs-anim-upper" for="af-{{ section.id }}-q{{ i }}"> {{ block.settings.title }}</label>
   <div class="fs-anim-lower">
     <select {% if block.settings.conditional != '' %}conditional="{{ block.settings.conditional | minus: 1 }}"{% endif %} tabindex="{{ tabindex }}" name="af-{{ section.id }}-q{{ i }}" id="af-{{ section.id }}-q{{ i }}">
      {% if block.settings.a != '' %}
       <option value="{{ block.settings.a }}" selected>{{ block.settings.a }}</option>
     {% endif %}
             {% if block.settings.b != '' %}
       <option value="{{ block.settings.b }}">{{ block.settings.b }}</option>
     {% endif %}
             {% if block.settings.c != '' %}
       <option value="{{ block.settings.c }}">{{ block.settings.c }}</option>
     {% endif %}
             {% if block.settings.d != '' %}
       <option value="{{ block.settings.d }}">{{ block.settings.d }}</option>
     {% endif %}
             {% if block.settings.e != '' %}
       <option value="{{ block.settings.e }}">{{ block.settings.e }}</option>
     {% endif %}
             {% if block.settings.f != '' %}
       <option value="{{ block.settings.f }}">{{ block.settings.f }}</option>
     {% endif %}     
       {% if block.settings.g != '' %}
       <option value="{{ block.settings.g }}">{{ block.settings.g }}</option>
     {% endif %}      
       {% if block.settings.h != '' %}
       <option value="{{ block.settings.h }}">{{ block.settings.h }}</option>
     {% endif %}      
       {% if block.settings.i != '' %}
       <option value="{{ block.settings.i }}">{{ block.settings.i }}</option>
     {% endif %}      
     {% if block.settings.j != '' %}
       <option value="{{ block.settings.j }}">{{ block.settings.j }}</option>
     {% endif %}     
           {% if block.settings.k != '' %}
       <option value="{{ block.settings.k }}">{{ block.settings.k }}</option>
     {% endif %}   
           {% if block.settings.l != '' %}
       <option value="{{ block.settings.l }}">{{ block.settings.l }}</option>
     {% endif %}   
              {% if block.settings.m != '' %}
       <option value="{{ block.settings.m }}">{{ block.settings.m }}</option>
     {% endif %}   
                     {% if block.settings.n != '' %}
       <option value="{{ block.settings.n }}">{{ block.settings.n }}</option>
     {% endif %}   
                     {% if block.settings.n != '' %}
       <option value="{{ block.settings.n }}">{{ block.settings.n }}</option>
     {% endif %}   
       {% if block.settings.o != '' %}
       <option value="{{ block.settings.o }}">{{ block.settings.o }}</option>
     {% endif %}   
     </select>
  </div>
</li>                      
{% assign tabindex = tabindex | plus: 1 %}  
{% when 'BigButtons' %}
<li id="{{ block.id }}" class="{% if block.settings.conditional and block.settings.conditional_block_id != '' and block.settings.conditional_block_value != '' %}skip{% endif %}" data-input-trigger>
	<label priority="{{ block.settings.priority  }}" class="fs-field-label fs-anim-upper" for="af-{{ section.id }}-q{{ i }}"> {{ block.settings.title }}</label>
    <div class="fs-radio-group fs-radio-custom bigbuttons clearfix fs-anim-lower {% if section.settings.onerow != false %}onerow{% endif %}">
      {% if block.settings.a != '' %}
      {% assign length =  block.settings.a | size %}
      <span><input tabindex="{{ tabindex }}" id="af-{{ section.id }}-q{{ i }}a" name="af-{{ section.id }}-q{{ i }}" type="radio" value="{{ block.settings.a }}"/><label class="{% if length == 3 %}small {% elsif length > 3 %}smaller{% endif %}" for="af-{{ section.id }}-q{{ i }}a">{{ block.settings.a }}</label></span>
     {% endif %}
     {% if block.settings.b != '' %}
      {% assign length =  block.settings.b | size %}
      <span><input tabindex="{{ tabindex }}" id="af-{{ section.id }}-q{{ i }}b" name="af-{{ section.id }}-q{{ i }}" type="radio" value="{{ block.settings.b }}"/><label class="{% if length == 3 %}small {% elsif length > 3 %}smaller{% endif %}" for="af-{{ section.id }}-q{{ i }}b">{{ block.settings.b }}</label></span>
     {% assign tabindex = tabindex | plus: 1 %} 
      {% endif %} 
          {% if block.settings.c != '' %}
       {% assign length =  block.settings.c | size %}
      <span><input tabindex="{{ tabindex }}" id="af-{{ section.id }}-q{{ i }}c" name="af-{{ section.id }}-q{{ i }}" type="radio" value="{{ block.settings.c }}"/><label class="{% if length == 3 %}small {% elsif length > 3 %}smaller{% endif %}" for="af-{{ section.id }}-q{{ i }}c">{{ block.settings.c }}</label></span>
    {% assign tabindex = tabindex | plus: 1 %} 
      {% endif %} 
           {% if block.settings.d != '' %}
       {% assign length =  block.settings.d | size %}
      <span><input tabindex="{{ tabindex }}" id="af-{{ section.id }}-q{{ i }}d" name="af-{{ section.id }}-q{{ i }}" type="radio" value="{{ block.settings.d }}"/><label class="{% if length == 3 %}small {% elsif length > 3 %}smaller{% endif %}" for="af-{{ section.id }}-q{{ i }}d">{{ block.settings.d }}</label></span>
     {% assign tabindex = tabindex | plus: 1 %} 
      {% endif %} 
           {% if block.settings.e != '' %}
       {% assign length =  block.settings.e | size %}
      <span><input tabindex="{{ tabindex }}" id="af-{{ section.id }}-q{{ i }}e" name="af-{{ section.id }}-q{{ i }}" type="radio" value="{{ block.settings.e }}"/><label class="{% if length == 3 %}small {% elsif length > 3 %}smaller{% endif %}" for="af-{{ section.id }}-q{{ i }}e">{{ block.settings.e }}</label></span>
     {% assign tabindex = tabindex | plus: 1 %} 
      {% endif %} 
           {% if block.settings.f != '' %}
       {% assign length =  block.settings.f | size %}
      <span><input tabindex="{{ tabindex }}" id="af-{{ section.id }}-q{{ i }}f" name="af-{{ section.id }}-q{{ i }}" type="radio" value="{{ block.settings.f }}"/><label class="{% if length == 3 %}small {% elsif length > 3 %}smaller{% endif %}" for="af-{{ section.id }}-q{{ i }}f">{{ block.settings.f }}</label></span>
     {% assign tabindex = tabindex | plus: 1 %} 
      {% endif %} 
           {% if block.settings.g != '' %}
       {% assign length =  block.settings.g | size %}
      <span><input tabindex="{{ tabindex }}" id="af-{{ section.id }}-q{{ i }}g" name="af-{{ section.id }}-q{{ i }}" type="radio" value="{{ block.settings.g }}"/><label class="{% if length == 3 %}small {% elsif length > 3 %}smaller{% endif %}" for="af-{{ section.id }}-q{{ i }}g">{{ block.settings.g }}</label></span>
     {% assign tabindex = tabindex | plus: 1 %} 
      {% endif %} 
           {% if block.settings.h != '' %}
       {% assign length =  block.settings.h | size %}
      <span><input tabindex="{{ tabindex }}" id="af-{{ section.id }}-q{{ i }}h" name="af-{{ section.id }}-q{{ i }}" type="radio" value="{{ block.settings.h }}"/><label class="{% if length == 3 %}small {% elsif length > 3 %}smaller{% endif %}" for="af-{{ section.id }}-q{{ i }}h">{{ block.settings.h }}</label></span>
     {% assign tabindex = tabindex | plus: 1 %} 
      {% endif %} 
           {% if block.settings.i != '' %}
       {% assign length =  block.settings.i | size %}
      <span><input tabindex="{{ tabindex }}" id="af-{{ section.id }}-q{{ i }}i" name="af-{{ section.id }}-q{{ i }}" type="radio" value="{{ block.settings.i }}"/><label class="{% if length == 3 %}small {% elsif length > 3 %}smaller{% endif %}" for="af-{{ section.id }}-q{{ i }}i">{{ block.settings.i }}</label></span>
     {% assign tabindex = tabindex | plus: 1 %} 
      {% endif %} 
  </div>  
</li>
{% when 'SmallButtons' %}
<li class="{% if block.settings.conditional and block.settings.conditional_block_id != '' and block.settings.conditional_block_value != '' %}conditional{% endif %}" data-input-trigger>
	<label priority="{{ block.settings.priority  }}" class="fs-field-label fs-anim-upper" for="af-{{ section.id }}-q{{ i }}"> {{ block.settings.title }}</label>
    <div class="fs-radio-group fs-radio-custom smallbuttons clearfix fs-anim-lower {% if section.settings.onerow != false %}onerow{% endif %}">
      {% if block.settings.a != '' %}
      {% assign length =  block.settings.a | size %}
      <span><input tabindex="{{ tabindex }}" id="af-{{ section.id }}-q{{ i }}a" name="af-{{ section.id }}-q{{ i }}" type="radio" value="{{ block.settings.a }}"/><label class="{% if length == 3 %}small {% elsif length > 3 %}smaller{% endif %}" for="af-{{ section.id }}-q{{ i }}a">{{ block.settings.a }}</label></span>
     {% assign tabindex = tabindex | plus: 1 %} 
      {% endif %}
     {% if block.settings.b != '' %}
      {% assign length =  block.settings.b | size %}
      <span><input  tabindex="{{ tabindex }}" id="af-{{ section.id }}-q{{ i }}b" name="af-{{ section.id }}-q{{ i }}" type="radio" value="{{ block.settings.b }}"/><label class="{% if length == 3 %}small {% elsif length > 3 %}smaller{% endif %}" for="af-{{ section.id }}-q{{ i }}b">{{ block.settings.b }}</label></span>
    {% assign tabindex = tabindex | plus: 1 %}
      {% endif %} 
          {% if block.settings.c != '' %}
       {% assign length =  block.settings.c | size %}
      <span><input  tabindex="{{ tabindex }}" id="af-{{ section.id }}-q{{ i }}c" name="af-{{ section.id }}-q{{ i }}" type="radio" value="{{ block.settings.c }}"/><label class="{% if length == 3 %}small {% elsif length > 3 %}smaller{% endif %}" for="af-{{ section.id }}-q{{ i }}c">{{ block.settings.c }}</label></span>
    {% assign tabindex = tabindex | plus: 1 %} 
      {% endif %} 
           {% if block.settings.d != '' %}
       {% assign length =  block.settings.d | size %}
      <span><input  tabindex="{{ tabindex }}" id="af-{{ section.id }}-q{{ i }}d" name="af-{{ section.id }}-q{{ i }}" type="radio" value="{{ block.settings.d }}"/><label class="{% if length == 3 %}small {% elsif length > 3 %}smaller{% endif %}" for="af-{{ section.id }}-q{{ i }}d">{{ block.settings.d }}</label></span>
     {% assign tabindex = tabindex | plus: 1 %} 
      {% endif %} 
           {% if block.settings.e != '' %}
       {% assign length =  block.settings.e | size %}
      <span><input  tabindex="{{ tabindex }}" id="af-{{ section.id }}-q{{ i }}e" name="af-{{ section.id }}-q{{ i }}" type="radio" value="{{ block.settings.e }}"/><label class="{% if length == 3 %}small {% elsif length > 3 %}smaller{% endif %}" for="af-{{ section.id }}-q{{ i }}e">{{ block.settings.e }}</label></span>
     {% assign tabindex = tabindex | plus: 1 %} 
      {% endif %} 
           {% if block.settings.f != '' %}
       {% assign length =  block.settings.f | size %}
      <span><input tabindex="{{ tabindex }}" id="af-{{ section.id }}-q{{ i }}f" name="af-{{ section.id }}-q{{ i }}" type="radio" value="{{ block.settings.f }}"/><label class="{% if length == 3 %}small {% elsif length > 3 %}smaller{% endif %}" for="af-{{ section.id }}-q{{ i }}f">{{ block.settings.f }}</label></span>
     {% assign tabindex = tabindex | plus: 1 %} 
      {% endif %} 
           {% if block.settings.g != '' %}
       {% assign length =  block.settings.g | size %}
      <span><input tabindex="{{ tabindex }}" id="af-{{ section.id }}-q{{ i }}g" name="af-{{ section.id }}-q{{ i }}" type="radio" value="{{ block.settings.g }}"/><label class="{% if length == 3 %}small {% elsif length > 3 %}smaller{% endif %}" for="af-{{ section.id }}-q{{ i }}}g">{{ block.settings.g }}</label></span>
     {% assign tabindex = tabindex | plus: 1 %} 
      {% endif %} 
           {% if block.settings.h != '' %}
       {% assign length =  block.settings.h | size %}
      <span><input  tabindex="{{ tabindex }}" id="af-{{ section.id }}-q{{ i }}h" name="af-{{ section.id }}-q{{ i }}" type="radio" value="{{ block.settings.h }}"/><label class="{% if length == 3 %}small {% elsif length > 3 %}smaller{% endif %}" for="af-{{ section.id }}-q{{ i }}h">{{ block.settings.h }}</label></span>
     {% assign tabindex = tabindex | plus: 1 %} 
      {% endif %} 
           {% if block.settings.i != '' %}
       {% assign length =  block.settings.i | size %}
      <span><input tabindex="{{ tabindex }}" id="af-{{ section.id }}-q{{ i }}i" name="af-{{ section.id }}-q{{ i }}" type="radio" value="{{ block.settings.i }}"/><label class="{% if length == 3 %}small {% elsif length > 3 %}smaller{% endif %}" for="af-{{ section.id }}-q{{ i }}i">{{ block.settings.i }}</label></span>
     {% assign tabindex = tabindex | plus: 1 %}
      {% endif %} 
  </div>  
</li>
                                         
{% assign i = i | plus: 1 %}                    
{% endcase %}
{% endfor %}

                      				</ol><!-- /fs-fields -->
                    
					<a class="fs-submit" role="button"><span>Submit</span></a>
                 </form><!-- /fs-form -->
                {% form 'contact', data-ajax:'false', class:'hidden-form', autocomplete:'off' %}
                  <input id="contactFormName" type="hidden" name="contact[name]" value="New {{ section.settings.title }} Form Submission" />      
                  <input id="contactFormEmail" type="hidden" name="contact[email]" value="form@{{ shop.domain | remove: 'www.' }}" />   
                  <input id="contactFormMessage" type="hidden" name="contact[body]" value="" />   
                {% endform %}
              
              </div>
              <div class="fs-form fs-form-overview advancedform-confirmation">
                 <h2>{{ section.settings.confirmation }}</h2>
               <div class="goback">
                  <a href="/">Back to Homepage</a>
                 </div>
              </div>
			</div><!-- /fs-form-wrap -->
		</div><!-- /container -->
<script>
 var callbackForm = function(){
  // Handler when the DOM is fully loaded
   if(!window.StripeCheckout) {
    var script = document.createElement("script");
    script.type = "text/javascript";   
    script.src = 'https://checkout.stripe.com/checkout.js';
    document.getElementsByTagName("head")[0].appendChild(script);
   }
   if(!window.FForm) {
    var script = document.createElement("script");
    script.type = "text/javascript";   
     script.src = '{{'fullscreenForm.js' | asset_url }}';
    document.getElementsByTagName("head")[0].appendChild(script);
      // add style
    var style = document.createElement("link");
    style.type = "text/css";  
    style.rel = "stylesheet";
     style.href = '{{'component.css' | asset_url }}';
    document.getElementsByTagName("head")[0].appendChild(style);
   }  
   

  
};

if (
    document.readyState === "complete" ||
    (document.readyState !== "loading" && !document.documentElement.doScroll)
) {
  callbackForm();
} else {
  document.addEventListener("DOMContentLoaded", callbackForm);
}
  

  
function deferForm(methodForm) {
    if (window.FForm) {
        methodForm();
    } else {
        setTimeout(function() { deferForm(methodForm) }, 50);
    }
}
  
deferForm(function () {  
  
var container = document.getElementById('container-{{ randomNumber }}');                                        
var page = container.closest('[data-role="page"]');  
page.querySelector('.ui-content').classList.add('ui-content-form');
container.style.opacity = '1';   
  
//set page dimensions
$(page).page({domCache:true});   
  if(jQuery("#header").hasClass("ui-toolbar-header-fixed") ) {
  $(page).css({'padding-top' : $('#header').outerHeight()});   
  }else if(jQuery("#footer").hasClass("ui-toolbar-footer-fixed") ) {
  $(page).css({'padding-bottom' : $('#footer').outerHeight()});   
  }
var content = SetHeightOfForm();
target = $(page).find("div.ui-content");
if(target.height() != content)
  target.css({'min-height' : content, 'height' : content}); 
  jQuery( window ).resize(function() {
  var content = SetHeightOfForm();
  target.css({'min-height' : content, 'height' : content});
});                                     
                              
                               
// stop all videos on close
$(document).on("pagehide", page, function(event) {
var youtube = page.querySelectorAll('iframe');
if(youtube) {
  youtube.forEach(youtube =>  [youtube.setAttribute('src', youtube.getAttribute('src'))]);
}
});  
  
  
                               
                               
                               
// activate stripe if necessary
var paymentli = $(container).find("li.payment");
  if(paymentli.length) {
    activatestripe(paymentli);
  }
  
var formWrap = $(container).find( '.fs-form-wrap' ).get(0);
new FForm( formWrap, {
	onReview : function() {
			document.body.classList.add('overview' ); // for demo purposes only
	}
} );
  
var getNextSibling = function (elem, selector) {

	// Get the next sibling element
	var sibling = elem.nextElementSibling;

	// If there's no selector, return the first sibling
	if (!selector) return sibling;

	// If the sibling matches our selector, use it
	// If not, jump to the next sibling and continue the loop
	while (sibling) {
		if (sibling.matches(selector)) return sibling;
		sibling = sibling.nextElementSibling
	}

};    
  
  
checkSubmit();

function checkSubmit() {
var url = new URL(window.location.href);
var c = url.searchParams.get("contact_posted");
  if(c) {  
document.body.classList.add("overview");  
var form = document.querySelector('#container-{{ randomNumber }} form.fs-form');
var wrapper = form.closest('.advancedform-wrapper'); 
var nav = getNextSibling(wrapper, '.fs-controls');
Array.prototype.forEach.call(nav.children, child => { child.classList.remove('fs-show')});  
var confirmation = getNextSibling(wrapper, '.advancedform-confirmation');
      $(wrapper).hide(400, function() {
         $(form).closest('.container').addClass('fs-confirmed');
        $(confirmation).show(400);
      });  
}  
                         
}  
  
  

  
$(container).find(".fs-submit").on("click", function(event) {

    var form = $(this).closest('form');
  // use slack
  var useSlack = false; 
  if(form.attr('slack')) {
   var useSlack = true; 
  }

    form.find('button.fs-submit').attr("disabled", 'disabled').find('span').html("Processing, please wait...");
    var formdata = {};

    $.each(form.serializeArray(), function(i, field) {
        formdata[field.name] = field.value;
    });
    var formlis = form.find('li:not(.skip):not(.payment)');
    // lets get the header first  
    var header = [];
    var headerhigh = [];
    var headermid = [];
    var headerlow = [];
    var body = [];
    var bodyhigh = [];
    var bodymid = [];
    var bodylow = [];
    var footer = [];
    var footerhigh = [];
    var footermid = [];
    var footerlow = [];
    var master = [];
    $.each(formlis, function(i, field) {
        var labelele = $(field).find('.fs-field-label');
        var name = labelele.attr('for');
        var label = labelele.text();
        var value = formdata[name];
        var priority = labelele.attr('priority');
        if (labelele.siblings('input').attr('type') == 'tel') {
            var value = formatPhoneNumber(value);
        }
        if (priority == 'header-high') {
            var newobj = {
                label: label,
                value: value
            };
            headerhigh.push(newobj);
        }
        if (priority == 'header-mid') {
            var newobj = {
                label: label,
                value: value
            };
            headermid.push(newobj);
        }
        if (priority == 'header-low') {
            var newobj = {
                label: label,
                value: value
            };
            headerlow.push(newobj);
        }
        if (priority == 'body-high') {
            var newobj = {
                label: label,
                value: value
            };
            bodyhigh.push(newobj);
        }
        if (priority == 'body-mid') {
            var newobj = {
                label: label,
                value: value
            };
            bodymid.push(newobj);
        }
        if (priority == 'body-low') {
            var newobj = {
                label: label,
                value: value
            };
            bodylow.push(newobj);
        }
        if (priority == 'footer-high') {
            var newobj = {
                label: label,
                value: value
            };
            footerhigh.push(newobj);
        }
        if (priority == 'footer-mid') {
            var newobj = {
                label: label,
                value: value
            };
            footermid.push(newobj);
        }
        if (priority == 'footer-low') {
            var newobj = {
                label: label,
                value: value
            };
            footerlow.push(newobj);
        }

    });


    if (headermid.length > 0) {
        headerhigh = headerhigh.concat(headermid);
    }
    if (headerlow.length > 0) {
        headerhigh = headerhigh.concat(headerlow);
    }

    if (headerhigh.length > 0) {
        header.push(headerhigh);
    }


    if (bodymid.length > 0) {
        bodyhigh = bodyhigh.concat(bodymid);
    }
    if (bodylow.length > 0) {
        bodyhigh = bodyhigh.concat(bodylow);
    }

    if (bodyhigh.length > 0) {
        body.push(bodyhigh);
    }

    if (footermid.length > 0) {
        footerhigh = footerhigh.concat(footermid);
    }
    if (footerlow.length > 0) {
        footerhigh = footerhigh.concat(footerlow);
    }

    if (footerhigh.length > 0) {
        footer.push(footerhigh);
    }

    var master = master.concat(header, body, footer)
 
    var text = '';

if(useSlack) { 
  
    // lets print out our master
    master.forEach(function(part, idx, i) {
        part.forEach(function(field, i) {
            text += field.label + ': ' + field.value + '\n';
        });
        if (idx !== master.length - 1) {
            text += "____________________________________________ \n \n";
        }
    });
    var url = form.attr('slack');
    var data = 'payload=' + JSON.stringify({ "text": encodeURIComponent(text)});
  
  var wrapper = form.closest('.advancedform-wrapper'); 
var confirmation = wrapper.siblings('.advancedform-confirmation');   
$.ajax({
   // dataType: 'json',
    processData: false,
    type: 'POST',
    url: url,
    data: data,
    success: function() { 
       event.preventDefault();
      // add fs confirmed
      wrapper.hide(400, function() {
         form.closest('.container').addClass('fs-confirmed');
        confirmation.show(400);
      });
     
      
    },
    error: function(XMLHttpRequest, textStatus, errorThrown) { 
           //alert("Status: " + textStatus); alert("Error: " + errorThrown); 
    }       
   
}); 
  
}else{ 
    
   var hiddenForm = form.next();
  console.log(hiddenForm);
    // lets print out our master
    master.forEach(function(part, idx, i) {
        part.forEach(function(field, i) {
          text += field.label + ': ' + field.value + '\n';
        });
        if (idx !== master.length - 1) {
            text += "____________________________________________ \n \n";
        }
    });  
  var data = text;
  var message = hiddenForm.find('#contactFormMessage')[0];
  message.value = data;
  hiddenForm[0].submit();
}
  
  

  
  

});
      
      

      
 
  
  
//functions 
function SetHeightOfForm() {
    var screen = jQuery.mobile.getScreenHeight();
    var fixed = jQuery("#header").hasClass("ui-toolbar-header-fixed") ? jQuery("#header").outerHeight() : jQuery("#footer").outerHeight();

    /* content div has padding of 1em = 16px (32px top+bottom). This step
   can be skipped by subtracting 32px from content var directly. */
    var contentCurrent = jQuery(".ui-content").outerHeight() - jQuery(".ui-content").height();
    var content = screen - fixed - contentCurrent;
    return content;
} 
  
  

  
function formatPhoneNumber(phoneNumberString) {
  var cleaned = ('' + phoneNumberString).replace(/\D/g, '')
  var match = cleaned.match(/^(\d{3})(\d{3})(\d{4})$/)
  if (match) {
    return '(' + match[1] + ') ' + match[2] + '-' + match[3]
  }
  return null
}
  
/*        Booking form */

function activatestripe(paymentli) {
  

  var link = paymentli.find('a.option');
  var amount = link.attr('amount') * 100;
  var name = link.attr('name');
  var desc = link.attr('description');
  var icon = link.attr('icon');
  
  var handler = StripeCheckout.configure({
			key: 'pk_live_kL5lp70uRIq1mV6SLnRN8dHf002dQQFytX',
			image: icon,
			locale: 'auto',
			token: function (token) {
				console.log(token);
				fetch('https://m56huc7k69.execute-api.us-east-1.amazonaws.com/dev/charges', {
					method: 'POST',
					headers: { 'Accept': 'application/json', 'Content-Type': 'application/json'},
					body: JSON.stringify({
						token: {
							id:token.id,
						},
						charge: {
							amount: amount,
							currency: 'usd'
						},
						stripeEmail: token.email,
					})
				}).then( (response) => {
                    console.log(response);
                  if(response.status == 200) {
                    $( "body" ).trigger('paymentreceived'); 
                  }
                });
			}
		});
  
  // close if we change pages
  $(document).one("pagecontainershow", function (event,ui) {
    	handler.close();
  });
  
  

  link.off('click').on('click', function() {
 			handler.open({
				name: name,
				description: desc,
				zipCode: true,
				currency: 'usd',
				amount: amount
			});  
  });
  
  
  
} 
  


  
  
  
  
});
</script>
{% schema %}
  {
    "name": "Advanced Form",
    "settings": [
{
   "type":      "header",
   "content":   "Form Settings"
},
{
        "id": "title",
        "type": "text",
        "label": "Title",
        "default": "Booking"
},
{
        "id": "webhook",
        "type": "url",
        "label": "Slack Webhook"
},{
        "id": "confirmation",
        "type": "textarea",
        "label": "Confirmation Message"
},
{
   "type":      "header",
   "content":   "Colors"
},{
       "id": "background_color",
       "type": "color",
       "label": "Background Color",
       "default": "#151625"
},{
       "id": "background_color_2",
       "type": "color",
       "label": "Background Color #2 (Optional Gradient)",
       "default": "transparent"
},
  {
        "type": "header",
        "content": "Form Navigation Colors"
      },
{
       "id": "navigation_color",
       "type": "color",
       "label": "Navigation Dot Background",
       "default": "#000000"
},
{
       "id": "navigation_active_color",
       "type": "color",
       "label": "Navigation Dot Active Background",
       "default": "#ffffff"
},
{
       "id": "button_hover_background_color",
       "type": "color",
       "label": "Continue Button Hover Background",
       "default": "#EA00A8"
},
{
       "id": "button_hover_color",
       "type": "color",
       "label": "Button Hover Color",
       "default": "#ffffff"
},
  {
        "type": "header",
        "content": "Form Input Colors"
      },
{
       "id": "label_color",
       "type": "color",
       "label": "Question Label Color",
       "default": "#ffffff"
},
{
       "id": "input_color",
       "type": "color",
       "label": "Text Input Color",
       "default": "#ffffff"
},
{
        "type": "header",
        "content": "Button Input Colors"
},
{
       "id": "button_input_background_color",
       "type": "color",
       "label": "Button Background",
       "default": "#8c68af"
},
{
       "id": "button_input_color",
       "type": "color",
       "label": "Button Color",
       "default": "#ffffff"
},  
{
       "id": "button_input_selected_background_color",
       "type": "color",
       "label": "Selected Button Background",
       "default": "#EA00A8"
},
{
       "id": "button_input_selected_color",
       "type": "color",
       "label": "Selected Button Color",
       "default": "#ffffff"
},  
{
 "type": "header",
 "content": "Additional Custom CSS"
},
{
        "id": "css",
        "type": "html",
        "label": "Custom CSS"
}],
"blocks": [
    {
     "type": "Name",
     "name": "Name",
     "limit": 1,
     "settings" : [
      {
        "type": "text",
        "id": "question",
        "label": "Question",
        "default": "What's your name?"
      },
     {
        "type": "text",
        "id": "placeholder",
        "label": "Placeholder"
      },
     {
  "type": "checkbox",
  "id": "required",
  "label": "Required"
     },
     {
        "type": "header",
        "content": "Lead Priority"
      },
     {
   "type": "radio",
   "id": "priority",
   "options": [
      { "value": "header-high", "label": "Header - High"},
      { "value": "header-mid", "label": "Header - Medium"},
      { "value": "header-low", "label": "Header - Low"},
      { "value": "body-high", "label": "Body - High"},
      { "value": "body-mid", "label": "Body - Medium"},
      { "value": "body-low", "label": "Body - Low"},
      { "value": "footer-high", "label": "Footer - High"},
      { "value": "footer-mid", "label": "Footer - Medium"},
      { "value": "footer-low", "label": "Footer - Low"}
   ],
   "default" : "header-high",
   "label": "Order Priority"
     },
     {
        "type": "header",
        "content": "Conditional Logic"
      },
     {
        "type": "checkbox",
        "id": "conditional",
        "label": "Enable Conditional Logic"
      },
     {
        "type": "text",
        "id": "conditional_block_id",
        "label": "Conditional Block ID"
      },
{
   "type": "select",
   "id": "conditional_if",
   "options": [
      { "value": "is", "label": "is"},
      { "value": "is not", "label": "is not"},
      { "value": "contains", "label": "contains"},
      { "value": "greater than", "label": "greater than"},
      { "value": "less than", "label": "less than"}
   ],
   "label": "If Answer"
},
     {
        "type": "text",
        "id": "conditional_block_value",
        "label": "This Value"
      }
]
},
    {
     "type": "Email",
     "name": "Email",
     "limit": 1,
     "settings" : [
      {
        "type": "text",
        "id": "question",
        "label": "Question",
        "default": "What's your email?"
      },
     {
        "type": "text",
        "id": "placeholder",
        "label": "Placeholder"
      },
     {
  "type": "checkbox",
  "id": "required",
  "label": "Required",
  "default":   true
     },
     {
        "type": "header",
        "content": "Lead Priority"
      },
     {
   "type": "radio",
   "id": "priority",
   "options": [
      { "value": "header-high", "label": "Header - High"},
      { "value": "header-mid", "label": "Header - Medium"},
      { "value": "header-low", "label": "Header - Low"},
      { "value": "body-high", "label": "Body - High"},
      { "value": "body-mid", "label": "Body - Medium"},
      { "value": "body-low", "label": "Body - Low"},
      { "value": "footer-high", "label": "Footer - High"},
      { "value": "footer-mid", "label": "Footer - Medium"},
      { "value": "footer-low", "label": "Footer - Low"}
   ],
   "default" : "footer-high",
   "label": "Order Priority"
     },
     {
        "type": "header",
        "content": "Conditional Logic"
      },
     {
        "type": "checkbox",
        "id": "conditional",
        "label": "Enable Conditional Logic"
      },
     {
        "type": "text",
        "id": "conditional_block_id",
        "label": "Conditional Block ID"
      },
{
   "type": "select",
   "id": "conditional_if",
   "options": [
      { "value": "is", "label": "is"},
      { "value": "is not", "label": "is not"},
      { "value": "contains", "label": "contains"},
      { "value": "greater than", "label": "greater than"},
      { "value": "less than", "label": "less than"}
   ],
   "label": "If Answer"
},
     {
        "type": "text",
        "id": "conditional_block_value",
        "label": "This Value"
      }
]
},
{
     "type": "Phone",
     "name": "Phone",
     "limit": 1,
     "settings" : [
      {
        "type": "text",
        "id": "question",
        "label": "Question",
        "default": "What's your Phone Number?"
      },
     {
  "type": "checkbox",
  "id": "required",
  "label": "Required",
  "default":   true
     },
     {
        "type": "header",
        "content": "Lead Priority"
      },
     {
   "type": "radio",
   "id": "priority",
   "options": [
      { "value": "header-high", "label": "Header - High"},
      { "value": "header-mid", "label": "Header - Medium"},
      { "value": "header-low", "label": "Header - Low"},
      { "value": "body-high", "label": "Body - High"},
      { "value": "body-mid", "label": "Body - Medium"},
      { "value": "body-low", "label": "Body - Low"},
      { "value": "footer-high", "label": "Footer - High"},
      { "value": "footer-mid", "label": "Footer - Medium"},
      { "value": "footer-low", "label": "Footer - Low"}
   ],
   "default" : "footer-mid",
   "label": "Order Priority"
     },
     {
        "type": "header",
        "content": "Conditional Logic"
      },
     {
        "type": "checkbox",
        "id": "conditional",
        "label": "Enable Conditional Logic"
      },
     {
        "type": "text",
        "id": "conditional_block_id",
        "label": "Conditional Block ID"
      },
{
   "type": "select",
   "id": "conditional_if",
   "options": [
      { "value": "is", "label": "is"},
      { "value": "is not", "label": "is not"},
      { "value": "contains", "label": "contains"},
      { "value": "greater than", "label": "greater than"},
      { "value": "less than", "label": "less than"}
   ],
   "label": "If Answer"
},
     {
        "type": "text",
        "id": "conditional_block_value",
        "label": "This Value"
      }
]
},
{
     "type": "Url",
     "name": "Url",
     "settings" : [
      {
        "type": "text",
        "id": "title",
        "label": "Question"
      },
     {
        "type": "text",
        "id": "placeholder",
        "label": "Placeholder"
      },
     {
  "type": "checkbox",
  "id": "required",
  "label": "Required"
     },
     {
        "type": "header",
        "content": "Lead Priority"
      },
     {
   "type": "radio",
   "id": "priority",
   "options": [
      { "value": "header-high", "label": "Header - High"},
      { "value": "header-mid", "label": "Header - Medium"},
      { "value": "header-low", "label": "Header - Low"},
      { "value": "body-high", "label": "Body - High"},
      { "value": "body-mid", "label": "Body - Medium"},
      { "value": "body-low", "label": "Body - Low"},
      { "value": "footer-high", "label": "Footer - High"},
      { "value": "footer-mid", "label": "Footer - Medium"},
      { "value": "footer-low", "label": "Footer - Low"}
   ],
   "default" : "body-mid",
   "label": "Order Priority"
     },
     {
        "type": "header",
        "content": "Conditional Logic"
      },
     {
        "type": "checkbox",
        "id": "conditional",
        "label": "Enable Conditional Logic"
      },
     {
        "type": "text",
        "id": "conditional_block_id",
        "label": "Conditional Block ID"
      },
{
   "type": "select",
   "id": "conditional_if",
   "options": [
      { "value": "is", "label": "is"},
      { "value": "is not", "label": "is not"},
      { "value": "contains", "label": "contains"},
      { "value": "greater than", "label": "greater than"},
      { "value": "less than", "label": "less than"}
   ],
   "label": "If Answer"
},
     {
        "type": "text",
        "id": "conditional_block_value",
        "label": "This Value"
      }
]
},
 {
     "type": "TextInput",
     "name": "Text Input",
     "settings" : [
      {
        "type": "text",
        "id": "title",
        "label": "Question"
      },
     {
        "type": "text",
        "id": "placeholder",
        "label": "Placeholder"
      },
     {
  "type": "checkbox",
  "id": "required",
  "label": "Required"
     },
     {
        "type": "header",
        "content": "Lead Priority"
      },
     {
   "type": "radio",
   "id": "priority",
   "options": [
      { "value": "header-high", "label": "Header - High"},
      { "value": "header-mid", "label": "Header - Medium"},
      { "value": "header-low", "label": "Header - Low"},
      { "value": "body-high", "label": "Body - High"},
      { "value": "body-mid", "label": "Body - Medium"},
      { "value": "body-low", "label": "Body - Low"},
      { "value": "footer-high", "label": "Footer - High"},
      { "value": "footer-mid", "label": "Footer - Medium"},
      { "value": "footer-low", "label": "Footer - Low"}
   ],
   "default" : "body-mid",
   "label": "Order Priority"
     },
     {
        "type": "header",
        "content": "Conditional Logic"
      },
     {
        "type": "checkbox",
        "id": "conditional",
        "label": "Enable Conditional Logic"
      },
     {
        "type": "text",
        "id": "conditional_block_id",
        "label": "Conditional Block ID"
      },
{
   "type": "select",
   "id": "conditional_if",
   "options": [
      { "value": "is", "label": "is"},
      { "value": "is not", "label": "is not"},
      { "value": "contains", "label": "contains"},
      { "value": "greater than", "label": "greater than"},
      { "value": "less than", "label": "less than"}
   ],
   "label": "If Answer"
},
     {
        "type": "text",
        "id": "conditional_block_value",
        "label": "This Value"
      }
]
},
{
     "type": "TextArea",
     "name": "Text Area",
     "settings" : [
      {
        "type": "text",
        "id": "title",
        "label": "Question"
      },
     {
  "type": "checkbox",
  "id": "required",
  "label": "Required"
     },
     {
        "type": "header",
        "content": "Lead Priority"
      },
     {
   "type": "radio",
   "id": "priority",
   "options": [
      { "value": "header-high", "label": "Header - High"},
      { "value": "header-mid", "label": "Header - Medium"},
      { "value": "header-low", "label": "Header - Low"},
      { "value": "body-high", "label": "Body - High"},
      { "value": "body-mid", "label": "Body - Medium"},
      { "value": "body-low", "label": "Body - Low"},
      { "value": "footer-high", "label": "Footer - High"},
      { "value": "footer-mid", "label": "Footer - Medium"},
      { "value": "footer-low", "label": "Footer - Low"}
   ],
   "default" : "body-mid",
   "label": "Order Priority"
     },
     {
        "type": "header",
        "content": "Conditional Logic"
      },
     {
        "type": "checkbox",
        "id": "conditional",
        "label": "Enable Conditional Logic"
      },
     {
        "type": "text",
        "id": "conditional_block_id",
        "label": "Conditional Block ID"
      },
{
   "type": "select",
   "id": "conditional_if",
   "options": [
      { "value": "is", "label": "is"},
      { "value": "is not", "label": "is not"},
      { "value": "contains", "label": "contains"},
      { "value": "greater than", "label": "greater than"},
      { "value": "less than", "label": "less than"}
   ],
   "label": "If Answer"
},
     {
        "type": "text",
        "id": "conditional_block_value",
        "label": "This Value"
      }
]
},
{
     "type": "DropDown",
     "name": "Drop Down Select",
     "settings" : [
      {
        "type": "text",
        "id": "title",
        "label": "Question"
      },
     {
  "type": "checkbox",
  "id": "required",
  "label": "Required"
     },
      {
        "type": "header",
        "content": "Optional Answers"
      },
     {
        "type": "text",
        "id": "a",
        "label": "Answer 1"
      },
     {
        "type": "text",
        "id": "b",
        "label": "Answer 2"
      },
     {
        "type": "text",
        "id": "c",
        "label": "Answer 3"
      },
     {
        "type": "text",
        "id": "d",
        "label": "Answer 4"
      },
     {
        "type": "text",
        "id": "e",
        "label": "Answer 5"
      },
     {
        "type": "text",
        "id": "f",
        "label": "Answer 6"
      },     {
        "type": "text",
        "id": "g",
        "label": "Answer 7"
      },
     {
        "type": "text",
        "id": "h",
        "label": "Answer 8"
      },
     {
        "type": "text",
        "id": "i",
        "label": "Answer 9"
      },
     {
        "type": "text",
        "id": "j",
        "label": "Answer 10"
      },
     {
        "type": "text",
        "id": "k",
        "label": "Answer 11"
      },
     {
        "type": "text",
        "id": "l",
        "label": "Answer 12"
      },
     {
        "type": "text",
        "id": "m",
        "label": "Answer 13"
      },
     {
        "type": "text",
        "id": "n",
        "label": "Answer 14"
      },
     {
        "type": "text",
        "id": "o",
        "label": "Answer 15"
      },
     {
        "type": "header",
        "content": "Lead Priority"
      },
     {
   "type": "radio",
   "id": "priority",
   "options": [
      { "value": "header-high", "label": "Header - High"},
      { "value": "header-mid", "label": "Header - Medium"},
      { "value": "header-low", "label": "Header - Low"},
      { "value": "body-high", "label": "Body - High"},
      { "value": "body-mid", "label": "Body - Medium"},
      { "value": "body-low", "label": "Body - Low"},
      { "value": "footer-high", "label": "Footer - High"},
      { "value": "footer-mid", "label": "Footer - Medium"},
      { "value": "footer-low", "label": "Footer - Low"}
   ],
   "default" : "body-mid",
   "label": "Order Priority"
     },
     {
        "type": "header",
        "content": "Conditional Logic"
      },
     {
        "type": "checkbox",
        "id": "conditional",
        "label": "Enable Conditional Logic"
      },
     {
        "type": "text",
        "id": "conditional_block_id",
        "label": "Conditional Block ID"
      },
{
   "type": "select",
   "id": "conditional_if",
   "options": [
      { "value": "is", "label": "is"},
      { "value": "is not", "label": "is not"},
      { "value": "contains", "label": "contains"},
      { "value": "greater than", "label": "greater than"},
      { "value": "less than", "label": "less than"}
   ],
   "label": "If Answer"
},
     {
        "type": "text",
        "id": "conditional_block_value",
        "label": "This Value"
      }
]
},
{
     "type": "BigButtons",
     "name": "Big Buttons",
     "settings" : [
      {
        "type": "text",
        "id": "title",
        "label": "Question"
      },
     {
  "type": "checkbox",
  "id": "required",
  "label": "Required"
     },
      {
        "type": "header",
        "content": "Optional Answers"
      },
     {
        "type": "text",
        "id": "a",
        "label": "Answer 1"
      },
     {
        "type": "text",
        "id": "b",
        "label": "Answer 2"
      },
     {
        "type": "text",
        "id": "c",
        "label": "Answer 3"
      },
     {
        "type": "text",
        "id": "d",
        "label": "Answer 4"
      },
     {
        "type": "text",
        "id": "e",
        "label": "Answer 5"
      },
     {
        "type": "text",
        "id": "f",
        "label": "Answer 6"
      },     {
        "type": "text",
        "id": "g",
        "label": "Answer 7"
      },
     {
        "type": "text",
        "id": "h",
        "label": "Answer 8"
      },
     {
        "type": "text",
        "id": "i",
        "label": "Answer 9"
      },
     {
        "type": "header",
        "content": "Lead Priority"
      },
     {
   "type": "radio",
   "id": "priority",
   "options": [
      { "value": "header-high", "label": "Header - High"},
      { "value": "header-mid", "label": "Header - Medium"},
      { "value": "header-low", "label": "Header - Low"},
      { "value": "body-high", "label": "Body - High"},
      { "value": "body-mid", "label": "Body - Medium"},
      { "value": "body-low", "label": "Body - Low"},
      { "value": "footer-high", "label": "Footer - High"},
      { "value": "footer-mid", "label": "Footer - Medium"},
      { "value": "footer-low", "label": "Footer - Low"}
   ],
   "default" : "body-mid",
   "label": "Order Priority"
     },
     {
        "type": "header",
        "content": "Conditional Logic"
      },
     {
        "type": "checkbox",
        "id": "conditional",
        "label": "Enable Conditional Logic"
      },
     {
        "type": "text",
        "id": "conditional_block_id",
        "label": "Conditional Block ID"
      },
{
   "type": "select",
   "id": "conditional_if",
   "options": [
      { "value": "is", "label": "is"},
      { "value": "is not", "label": "is not"},
      { "value": "contains", "label": "contains"},
      { "value": "greater than", "label": "greater than"},
      { "value": "less than", "label": "less than"}
   ],
   "label": "If Answer"
},
     {
        "type": "text",
        "id": "conditional_block_value",
        "label": "This Value"
      }
]
},
{
     "type": "SmallButtons",
     "name": "Small Buttons",
     "settings" : [
      {
        "type": "text",
        "id": "title",
        "label": "Question"
      },
     {
  "type": "checkbox",
  "id": "required",
  "label": "Required"
     },
      {
        "type": "header",
        "content": "Optional Answers"
      },
     {
        "type": "text",
        "id": "a",
        "label": "Answer 1"
      },
     {
        "type": "text",
        "id": "b",
        "label": "Answer 2"
      },
     {
        "type": "text",
        "id": "c",
        "label": "Answer 3"
      },
     {
        "type": "text",
        "id": "d",
        "label": "Answer 4"
      },
     {
        "type": "text",
        "id": "e",
        "label": "Answer 5"
      },
     {
        "type": "text",
        "id": "f",
        "label": "Answer 6"
      },     {
        "type": "text",
        "id": "g",
        "label": "Answer 7"
      },
     {
        "type": "text",
        "id": "h",
        "label": "Answer 8"
      },
     {
        "type": "text",
        "id": "i",
        "label": "Answer 9"
      },
     {
        "type": "header",
        "content": "Lead Priority"
      },
     {
   "type": "radio",
   "id": "priority",
   "options": [
      { "value": "header-high", "label": "Header - High"},
      { "value": "header-mid", "label": "Header - Medium"},
      { "value": "header-low", "label": "Header - Low"},
      { "value": "body-high", "label": "Body - High"},
      { "value": "body-mid", "label": "Body - Medium"},
      { "value": "body-low", "label": "Body - Low"},
      { "value": "footer-high", "label": "Footer - High"},
      { "value": "footer-mid", "label": "Footer - Medium"},
      { "value": "footer-low", "label": "Footer - Low"}
   ],
   "default" : "body-mid",
   "label": "Order Priority"
     },
     {
        "type": "header",
        "content": "Conditional Logic"
      },
     {
        "type": "checkbox",
        "id": "conditional",
        "label": "Enable Conditional Logic"
      },
     {
        "type": "text",
        "id": "conditional_block_id",
        "label": "Conditional Block ID"
      },
{
   "type": "select",
   "id": "conditional_if",
   "options": [
      { "value": "is", "label": "is"},
      { "value": "is not", "label": "is not"},
      { "value": "contains", "label": "contains"},
      { "value": "greater than", "label": "greater than"},
      { "value": "less than", "label": "less than"}
   ],
   "label": "If Answer"
},
     {
        "type": "text",
        "id": "conditional_block_value",
        "label": "This Value"
      }
]
},
{
     "type": "Youtube",
     "name": "Youtube",
     "settings" : [
      {
        "type": "text",
        "id": "title",
        "label": "Title"
      },
     {
        "type": "text",
        "id": "button_text",
        "label": "Continue Button Text"
      },
{
   "id": "youtube_url",
   "type": "video_url",
   "label": "Youtube URL",
   "accept": ["youtube"],
   "default": "https://www.youtube.com/watch?v=6L_k74BOLag"
},
     {
        "type": "header",
        "content": "Conditional Logic"
      },
     {
        "type": "checkbox",
        "id": "conditional",
        "label": "Enable Conditional Logic"
      },
     {
        "type": "text",
        "id": "conditional_block_id",
        "label": "Conditional Block ID"
      },
{
   "type": "select",
   "id": "conditional_if",
   "options": [
      { "value": "is", "label": "is"},
      { "value": "is not", "label": "is not"},
      { "value": "contains", "label": "contains"},
      { "value": "greater than", "label": "greater than"},
      { "value": "less than", "label": "less than"}
   ],
   "label": "If Answer"
},
     {
        "type": "text",
        "id": "conditional_block_value",
        "label": "This Value"
      }
]
}
 ]
  }
{% endschema %}

{% stylesheet 'scss' %}
// responsive sizes
@mixin bp($point) {
  
  $bp-small: "(max-width: 350px)";
  $bp-mobile: "(max-width: 600px)";
  $bp-mobileup: "(min-width: 600px)";
  $bp-phablet: "(max-width: 1022px)";
  $bp-phabletup: "(min-width: 1022px)";
  $bp-tablet: "(max-width: 1280px)";
  $bp-tabletup: "(min-width: 1280px)";
  $bp-laptop: "(max-width: 1600px)";
  $bp-desktop: "(min-width: 1600px)";
  @if $point == desktop {
    @media #{$bp-desktop}  { @content; }
  }  
  @else if $point == laptop {
    @media #{$bp-laptop} { @content; }
  }
  @else if $point == tablet {
    @media #{$bp-tablet} { @content; }
  }
  @else if $point == tabletup {
    @media #{$bp-tabletup} { @content; }
  }
  @else if $point == phablet {
    @media #{$bp-phablet} { @content; }
  }
  @else if $point == phabletup {
    @media #{$bp-phabletup} { @content; }
  }
  @else if $point == mobile {
    @media #{$bp-mobile}  { @content; }
  }
  @else if $point == mobileup {
    @media #{$bp-mobileup} { @content; }
  }
  @else if $point == small {
    @media #{$bp-small}  { @content; }
  }

}

//color transition
@mixin transition($attribute, $duration) {
    -webkit-transition: $attribute $duration ease;
    -moz-transition: $attribute $duration ease;
    transition: $attribute $duration ease;
}











.template-page  .ui-content.ui-content-form {
  	padding:0;   
    position: relative;  
    -webkit-overflow-scrolling: touch; /* Lets it scroll lazy */
    & .shopify-section {
 height:100%;
padding-top:0px;
    }
}



.ui-content-form .container {
@include transition(opacity,0.8s);
}

.advancedform-wrapper {
    position: relative;
    width: 100%;
    height: 100%;
    overflow-y: hidden;
    & .fs-form-full {
      @include bp(phablet) {
        top: 3em;
      }
    }

    & .fs-form {
      & .fs-fields {
        & > li {
          &.skip {
    visibility: hidden;
    overflow: hidden;
    height: 0px;
    width: 0px;
    padding: 0px;
    margin: 0px;
          }
&.video {

@include bp(desktop) {
transform: translateY(-14%);  
}
@include bp(laptop) {
transform: translateY(-25%);
}
@include bp(phablet) {
transform: translateY(5%);
}

& .bigbuttons {
@include bp(laptop) {
max-width: 85%;
}
@include bp(phablet) {
max-width: 100%;
}
}
& label {
    padding: 0 5px 0em 0;
margin-bottom: .2em;
font-size: 0.7em;
@include bp(phablet) {
    font-size: 0.8em;
    line-height: normal;
    margin-bottom: 0.7em;
}
}
            & .video-wrap {
             width: 100%;
             position: relative;
    height: 0;
    margin-bottom: 1rem;
padding-bottom: 56.25%;
    overflow: hidden;
@include bp(laptop) {
//margin-bottom: 0;
}
& iframe, & video {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}
& + div {
    width: 100%;
    text-align: center;
}
           }
& a {
background-color: rgba(255,255,255,0.13);
          font-family: 'Open Sans', sans-serif;
         font-weight:bold;
    border-radius: 65px;
    color: #fff;
    -webkit-transition: background-color 0.3s;
    transition: background-color 0.3s;
    font-size: 100%;
display: inline-block;
padding: 11px 40px;
    line-height: 1;
@include bp(laptop) {
padding: 9px 40px;
font-size: 72%;
}
@include bp(phablet) {
    padding: 12px 20px;
    min-height: 45px;
    line-height: 1;
    margin: 0;
    min-width: 60%;
font-size: 100%;
}
}
}
          & .option {
             background-color: rgb(23, 185, 118);
          font-family: 'Open Sans', sans-serif;
         font-weight:bold;
    border-radius: 65px;
    color: #fff;
    -webkit-transition: background-color 0.3s;
    transition: background-color 0.3s;
    font-size: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 24px 50px;
    line-height: 1;
    margin-top: 35px;
    float: left;
    font-size: 80%;
          }
          & .fs-radio-custom {
                display: flex;
                flex-flow: wrap;
                align-items: stretch;
              @include bp(phablet) {
                  display: block;
              }
              & span {
                  margin-right:0;
                  font-size: 50px;
                  @include bp(phablet) {
                        float: none; 
                        max-width: none; 
                        font-size: 24px;
                        padding: 0px;
                        margin: 0 0 10px 0;
                        width: auto;
                        display: block;
                  }
                   &  input[type="radio"]:checked + label {
                   background-color:#EA00A8;
                  }
                  & label {
                background-color: rgba(255, 255, 255, 0.13);
               font-family: 'Open Sans', sans-serif;
         font-weight:bold;
                border-radius: 65px;
                color: #fff;
                  -webkit-transition: background-color 0.3s;
                  transition: background-color 0.3s;
                    font-size:100%;
                    display: flex;
                    justify-content: center;
                     align-items: center;
                     padding: 11px 15px;
                     line-height: 1;
                    @include bp(phablet) {
                          padding: 12px 20px;
  						  min-height: 45px;
   						  line-height: 1;
  						  margin: 0;
                     }
                    &.small {
                        font-size: 90%;
                      @include bp(phablet) {
                       font-size:100%;
                      }
                    }
                    &.smaller {
                        font-size: 70%;
                      @include bp(phablet) {
                       font-size:100%;
                      }
                    }
                  }
                @include bp(phablet) {
                    width: auto;
                }
              }
              &.onerow {
                 flex-flow: nowrap;
                @include bp(phablet) {
                 flex-flow: wrap;
                }
              }
       
            &.smallbuttons {
            flex-flow: column;
              & span {
                  max-width: none;
                  width: auto;
                @include bp(mobile) {
                     font-size: 17px;
                }
                & label {
                    padding: 15px 15px;
                      font-family: -apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,"Helvetica Neue",Arial,sans-serifOS;
                     font-weight: bold;
                }
              }
            }
          }
        }
      }
      &.fs-form-full {
       & .fs-fields {
        & > li {
          & label.fs-field-label {
           	color:#fff;
          }
          & input {
                color: #ffeaad;
             
          }
          & select {
          height: inherit;
    padding: 0.5rem 2rem;
    background-color: transparent;
    border: 1px solid rgb(255, 255, 255);
    color: #fff;
    outline: none;
    box-shadow: none;
   background-image:url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' version='1.1' width='32' height='24' viewBox='0 0 32 24'><polygon points='0,0 32,0 16,24' style='fill: rgb%28255, 255, 255%29'></polygon></svg>");
            option {
             color:#000; 
            }
          }
          & textarea {
              color: #ffeaad;
          }
        }
       }
      }
     &.fs-form-overview {
        background: #ffffff;
        -webkit-overflow-scrolling: touch; /* Lets it scroll lazy */
       & .fs-fields {
        & > li {
          &.payment {
           display:none;
          }
          & .fs-radio-custom {
            & span {
                font-size: 20px;
              & label {
                  color: #000;
                  background-color: rgba(0, 0, 0, 0.13);
              }
              & input[type="radio"]:checked+label {
                    background-color: #000000;
               color:#fff;
              }
            }
          }
        }
       }
      & .fs-submit {
        cursor:pointer;
          border-color: #EA00A8;
    background: #EA00A8;
    color: #fff;
    border: none;
    line-height: 1;
    padding: 0.9em 1.5em;
      }
    }
    }
    & input {
        box-shadow: none;
    }
}




.fs-form.advancedform-confirmation {
        display:none;
        background: none;
        color: #fff;
        text-align:center;
         & h2 {
          color:#fff;
          font-family: 'Open Sans', sans-serif;
         font-weight:bold;
         }
    & .goback {
     text-align:center;
            margin-top: 30px;
      & a {
         color: #fff;
            font-size: 16px;
    border: 1px solid rgba(255, 255, 255, 0.25);
    padding: 15px 20px;
    display: inline-block;
    border-radius: 30px;
        &:before {
         content:'\f060';
         font-family:'FontAwesome';
         display:inline-block;
         margin-right:5px;
        }
      }
    } 
}




.fs-controls {
    & .fs-numbers {
        color: rgb(255, 255, 255);
    }
    & .fs-progress {
    /* Permalink - use to edit and share this gradient: http://colorzilla.com/gradient-editor/#f3c03a+0,d94f71+100 */
background: rgb(243,192,58); /* Old browsers */
background: -moz-linear-gradient(left, rgba(243,192,58,1) 0%, rgba(217,79,113,1) 100%); /* FF3.6-15 */
background: -webkit-linear-gradient(left, rgba(243,192,58,1) 0%,rgba(217,79,113,1) 100%); /* Chrome10-25,Safari5.1-6 */
background: linear-gradient(to right, rgba(243,192,58,1) 0%,rgba(217,79,113,1) 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#f3c03a', endColorstr='#d94f71',GradientType=1 ); /* IE6-9 */
    }
    & button.fs-continue {
        border: 3px solid #ffffff;
          color: rgb(255, 255, 255);
      cursor:pointer;
      &:hover {
         background: #f209aa;
         border-color: #f209aa;
      }
      &:after {
          color: rgba(255, 255, 255, 0.6);
      }
    }
}

.fs-message-error {
    @include bp(mobile) {
      padding: 0 0px 0 1em;
    width: 73%;
    }
}

.fs-confirmed {
    display: flex;
    flex-direction: column;
    justify-content: center;
       & #advancedform-confirmation {
        visibility:visible;
        pointer-events:auto;
      }
}

.shopify-challenge__container {
 padding: 30px 0;
}
  
/**
 * The CSS shown here will not be introduced in the Quickstart guide, but shows
 * how you can use CSS to style your Element's container.
 */
.StripeElement {
  box-sizing: border-box;

  height: 40px;

  padding: 10px 12px;

  border: 1px solid transparent;
  border-radius: 4px;
  background-color: white;

  box-shadow: 0 1px 3px 0 #e6ebf1;
  -webkit-transition: box-shadow 150ms ease;
  transition: box-shadow 150ms ease;
}

.StripeElement--focus {
  box-shadow: 0 1px 3px 0 #cfd7df;
}

.StripeElement--invalid {
  border-color: #fa755a;
}

.StripeElement--webkit-autofill {
  background-color: #fefde5 !important;
}


{% endstylesheet %}  

{% javascript %}   

$(document).on("shopify:section:select",'#shopify-section-Advanced-Form',function(e){


var formWrap = this.querySelector( '.fs-form-wrap' );
var container = this.querySelector('.container');
container.style.opacity = '1';  
new FForm( formWrap, {
	onReview : function() {
			document.body.classList.add('overview' ); // for demo purposes only
            
	}
} );


});
 
{% endjavascript %}                  
