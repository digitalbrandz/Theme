{% if section.settings.activate_slider != false %}  
<div id="slider-home-basic">
  {% for block in section.blocks %}
    {% case block.type %}
      {% when 'Slider' %}
         <div><a href="{{ block.settings.slide_url }}"><img src="{{ block.settings.slide_image | img_url: '2048x2048' }}" /></a></div>
       {% endcase %}
   {% endfor %}
</div>
{% else %}

{% unless section.settings.rev == '' %}
{% assign link_structure = section.settings.rev | split: '"http' %}  
{% assign link_structure = link_structure[1] | split: '"' %} 


{% if link_structure[0] contains 'google' %}
{% assign google_font = link_structure[0] | prepend: 'https' %}
{% assign link_structure = section.settings.rev | split: '"http' %}  
{% assign link_structure = link_structure[3] | split: '"' %} 
{% endif %}



{% unless link_structure contains '/wp-content/uploads/' %}
{% assign admin_link = link_structure[0] | split: '/' %}
{% capture admin_link %}{% for link_part in admin_link %}{% unless forloop.first == true %}/{% endunless %}{% unless forloop.last == true %}{{ link_part }}{% endunless %}{% endfor %}{% endcapture %}
{% assign admin_link_structure = admin_link | prepend: 'http' %}
{% assign link_structure = section.settings.rev | split: '"http' %}  

{% assign link_structure = link_structure[2] | split: '"' %} 
{% capture theme_file_structure %}{{ 'transparent.png' | asset_url }}{% endcapture %}
{% assign theme_file_structure = theme_file_structure | split: '?' %} 
{% assign theme_file_structure = theme_file_structure[0] %} 
{% assign theme_file_structure = theme_file_structure | split: 'transparent.png' %} 
{% assign theme_file_structure = theme_file_structure[0] %} 
{% endunless %}



<!-- if it has a svg -->
{% if section.settings.rev contains 'data-svg_src' %}
{% assign svg_link_structure = section.settings.rev | split: 'data-svg_src="http' %}  
{% assign svg_link_structure = svg_link_structure[1] | split: '"' %} 
{% assign svg_link_structure = svg_link_structure[0] | prepend: 'http' %} 
{% assign svg_link_structure = svg_link_structure | split: '/' %}
{% capture original_svg_link_structure %}{% for svg_link_part in svg_link_structure %}{% unless forloop.first == true %}/{% endunless %}{% unless forloop.last == true %}{{ svg_link_part }}{% endunless %}{% endfor %}{% endcapture %}
{% endif %}



{% assign link_structure = link_structure[0] | prepend: 'http' %} 
{% assign link_structure = link_structure | split: '/' %}
{% capture original_link_structure %}{% for link_part in link_structure %}{% unless forloop.first == true %}/{% endunless %}{% unless forloop.last == true %}{{ link_part }}{% endunless %}{% endfor %}{% endcapture %}




{% capture file_structure %}{{ '' | file_url }}{% endcapture %}
{% assign file_structure = file_structure | split: '?' %} 
{% assign new_link_structure = file_structure[0] %} 


<!-- see if it has close tag -->
{% assign slider_html_with_script_test = section.settings.rev | split: '<script' %}
{% assign slider_html_with_script_test = slider_html_with_script_test[1] | slice: 0 %}
{% if slider_html_with_script_test == '>' %}
  {% assign fromBody = true %}
{% else %} 
  {% assign fromBody = false %}
{% endif %}





<!-- if regular script tag -->
{% if fromBody %}
{% assign slider_html_with_script = section.settings.rev | split: '<script>' %}
{% assign slider_html = slider_html_with_script[0] | append: '</div>' %}
{% else %}
{% assign slider_html_with_script = section.settings.rev | split: '<script type="text/javascript">' %}
{% assign slider_additional_css = slider_html_with_script.last | split: '</script>' %}
{% assign slider_additional_css = slider_additional_css.last | split: '</div>' %}
{% assign slider_additional_css = slider_additional_css.first %}
{% assign slider_html = slider_html_with_script[0] | append: '</div>' %}
{% assign slider_html = slider_html | prepend: slider_additional_css %}
{% endif %}
{% if svg_link_structure %}
{% assign slider_html =  slider_html | replace: original_svg_link_structure, new_link_structure %}
{% endif %}
{% assign slider_html =  slider_html | replace: original_link_structure, new_link_structure %}
{% if admin_link_structure %}
{% assign slider_html =  slider_html | replace: admin_link_structure, theme_file_structure %}
{% endif %}
{% if google_font %}
{% assign slider_html = slider_html | split: 'type="text/css" media="all">' %}
{% assign slider_html = slider_html[1] %}
{% endif %}

<!-- get all the duplicates out -->
{% for i in (1..30) %}
{% assign png = i | prepend: '-' | append: '.png' %}
{% assign jpg = i | prepend: '-' | append: '.jpg' %}
{% assign slider_html =  slider_html | replace: png, '.png' %}
{% assign slider_html =  slider_html | replace: jpg, '.jpg' %}
{% endfor %}


{% assign slider_html =  slider_html | remove: 'target="_self"' %}


{% capture slider_js %}{% for script_part in slider_html_with_script %}{% unless forloop.first == true %}{{ script_part | remove: '<script type="text/javascript">' | remove: '</script>' | remove: '</div>' | remove: '<!-- END REVOLUTION SLIDER -->' }}{% endunless %}{% endfor %}{% endcapture %}
{% unless fromBody %}
{% assign slider_js = slider_js | split: '<style' %}
{% assign slider_js = slider_js.first %}
{% endunless %}
{% assign slider_js_edit = slider_js | split: 'jsFileLocation:"' %}
{% assign slider_js_edit = slider_js_edit[1] | split: '"' %}
{% assign slider_js_edit = slider_js_edit[0] %}
{% assign slider_js = slider_js | remove: slider_js_edit %}

{% if section.settings.wait_slider %}
{% unless slider_js contains 'waitForInit' %}
  {% assign slider_js = slider_js | replace: 'jsFileLocation:"",','jsFileLocation:"",waitForInit: true,' %}
{% endunless %}
{% endif %}


{{ slider_html }}


  
<script>
  
  {% if google_font %}
  var styleArray = Array.prototype.slice.call(document.styleSheets);
  var callbackSliderFont{{section.id}} = function(){
  // Handler when the DOM is fully loaded
    if(!styleArray.includes("{{ google_font }}")) {
    // add style
    var style = document.createElement("link");
    style.type = "text/css";  
    style.rel = "stylesheet";
    style.href = '{{ google_font }}';
    document.getElementsByTagName("head")[0].appendChild(style);
  }
};

if (
    document.readyState === "complete" ||
    (document.readyState !== "loading" && !document.documentElement.doScroll)
) {
  callbackSliderFont{{section.id}}();
} else {
  document.addEventListener("DOMContentLoaded", callbackSliderFont{{section.id}});
}  
  {% endif %}
  
function deferSlider{{section.id}}(methodSlider{{section.id}}) {
    if (window.jQuery) {
      if (window.jQuery.mobile) {
        methodSlider{{section.id}}();
      }else{
        setTimeout(function() { deferSlider{{section.id}}(methodSlider{{section.id}}) }, 10);
      }
    } else {
        setTimeout(function() { deferSlider{{section.id}}(methodSlider{{section.id}}) }, 10);
    }
}
deferSlider{{section.id}}(function () {  
   
$(document).one("pagecreate", '#index', function (event, ui) {
	$(document).one("pagecontainerbeforeshow", function (event, ui) {
		if (ui.toPage[0].id == 'index') {
			var page = ui.toPage[0];
            window.dataPrev{{ section.id }} = ui.prevPage[0];
			window.scrollTo(0, 0);
			var slider = jQuery(page).find('#shopify-section-{{ section.id }} .rev_slider');
                   
                // start slider                                        
                {{slider_js }} 
                                           
                function logLoaded{{section.id}}() {
                      var slider = jQuery(page).find('#shopify-section-{{ section.id }} .rev_slider');
                      slider.revstart();
                }
				(function listen{{section.id}}() {
					if (window.loaded && typeof jQuery.fn.revolution.checkActions != 'undefined') {
                      
                      if(typeof window.dataPrev{{ section.id }} != 'undefined') {
						logLoaded{{section.id}}();
                      }else{
                        setTimeout(function () {
                        logLoaded{{section.id}}();                   
                        }, 2000);
                      }
					} else {
						window.setTimeout(listen{{section.id}}, 50);
					}
				})();
          


		}
	});
});
  
$(document).one( "pageremove", '#index', function( event, ui ) {
  var sliders = this.querySelectorAll('.rev_slider');
  if(sliders ) {
    sliders.forEach(function(slider) {
  	$(slider).revkill();
    });
  }
});
$(document).one( "pagehide", '#index', function( event, ui ) {
  var sliders = this.querySelectorAll('.rev_slider');
  if(sliders ) {
    sliders.forEach(function(slider) {
  	var video = slider.querySelector('video');
      if(video) {
       video.muted = true;
      }
    });
  }
});  
  

function setREVStartSize(e) {
    try {
        e.c = jQuery(e.c);
        var i = jQuery(window).width(),
            t = 9999,
            r = 0,
            n = 0,
            l = 0,
            f = 0,
            s = 0,
            h = 0;
        if (e.responsiveLevels && (jQuery.each(e.responsiveLevels, function(e, f) {
                f > i && (t = r = f, l = e), i > f && f > r && (r = f, n = e)
            }), t > r && (l = n)), f = e.gridheight[l] || e.gridheight[0] || e.gridheight, s = e.gridwidth[l] || e.gridwidth[0] || e.gridwidth, h = i / s, h = h > 1 ? 1 : h, f = Math.round(h * f), "fullscreen" == e.sliderLayout) {
            var u = (e.c.width(), jQuery(window).height());
            if (void 0 != e.fullScreenOffsetContainer) {
                var c = e.fullScreenOffsetContainer.split(",");
                if (c) jQuery.each(c, function(e, i) {
                    u = jQuery(i).length > 0 ? u - jQuery(i).outerHeight(!0) : u
                }), e.fullScreenOffset.split("%").length > 1 && void 0 != e.fullScreenOffset && e.fullScreenOffset.length > 0 ? u -= jQuery(window).height() * parseInt(e.fullScreenOffset, 0) / 100 : void 0 != e.fullScreenOffset && e.fullScreenOffset.length > 0 && (u -= parseInt(e.fullScreenOffset, 0))
            }
            f = u
        } else void 0 != e.minHeight && f < e.minHeight && (f = e.minHeight);
        e.c.closest(".rev_slider_wrapper").css({
            height: f
        })
    } catch (d) {
        console.log("Failure at Presize of Slider:" + d)
    }
}  

  


  
});
</script>
{% else %}
<div class="emptyRev">
 <span>
 Please Enter Slider HTML/JS 
 </span>
</div>
{% endunless %}
{% endif %}  
{% schema %}
  {
    "name": "Slider",
    "settings": [
      {
        "type": "header",
        "content": "Customize Your Slider"
      },
      {
        "type": "paragraph",
        "content": "Your Design comes with a premium animation slider thats very difficult to customize, so we added a simpler basic slider you can swap into when you need to display your own simple banners, it can be activated at any time and replace the premium slider for promotions and other ideas. (Please upload at least 1920w by 1200h image"
      },
      {
        "type": "checkbox",
        "id": "activate_slider",
        "label": "Activate Basic Slider",
        "default": false
      },
      {
        "type": "html",
        "id": "rev",
        "label": "Slider HTML"
      },
      {
        "type": "checkbox",
        "id": "wait_slider",
        "label": "Wait for Page Load",
        "default": true
      }
     ],
     "blocks": [
     {
     "type": "Slider",
     "name": "Slide",
     "settings" : [
      {
       "id": "slide_image",
       "type": "image_picker",
       "label": "Slide Image"
      },
      {
       "id": "slide_url",
       "type": "url",
       "label": "Slide Link"
      }
     ]
    } 
   ],
  "presets": [
    {
      "name": "Animated Slider",
      "category": "Design"
    }
  ]
  }
{% endschema %}

{% stylesheet 'scss' %}
.emptyRev {
display:flex;
justify-content:center;
margin:0 auto;
padding:100px 20px;
& span {
border: 3px solid red;
padding: 20px 35px;
}
}
{% endstylesheet %}

{% javascript %}


{% endjavascript %}        
