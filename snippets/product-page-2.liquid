{% if settings.tipobooking %} 
{% include 'tipo.booking.script' %}
{% endif %}
{% if settings.boldoptions %}
{%- include 'bold-common' -%}
{%- include 'bold-product' with product, hide_action: 'break', output: 'none' -%}
{% endif %}
{% if settings.boldsubscriptions %}  
{%- include 'bold-ro-init' -%}
{% endif %}

{% assign add_to_cart = 'Add to Bag' %}
{% assign sold_out = 'Sold Out' %}
{% assign unavailable = 'Unavailable' %}

<meta itemprop="url" content="{{ shop.url }}{{ product.url }}" />
<meta itemprop="image" content="{{ product | img_url: 'grande' }}" />

<div class="product-page-2" itemscope itemtype="http://schema.org/Product">
  
<div class="product-top">  
<div class="product-gallery">
  <div class="swiper-container">
    <div class="swiper-wrapper">
      {% for media in product.media %}
      <div class="swiper-slide">
      {% case media.media_type %}
      {% when 'image' %}
        <div class="image" data-media-id="{{ media.id }}">
          <img class="lazyload" title="{{ product.title | escape }}" data-src="{{ media | product_img_url: '1024x1024' }}" />
        </div>        
      {% when 'video' %}
        <div class="video" data-media-id="{{ media.id }}">
          {{ media | video_tag: controls:false,autoplay:true,muted:true,loop:true }}
        </div>
      {% endcase %}
      </div>
     {% endfor %}
        

      
    </div>
    <!-- If we need navigation buttons -->
    <div class="swiper-button-prev"></div>
    <div class="swiper-button-next"></div>
    
  </div>
</div>

  
{% form 'product', product, data-ajax: 'false', class: 'ajax product_form'  %} 
  <div class="product-form-fixed__left small--hide">
    <div class="product-single__title--wrap">
       <h1 class="product-single__title">{{ product.title }}
      </h1>
      <div class="product-price-wrap" id="product-price-{{ product.id }}" itemprop="offers" itemscope itemtype="http://schema.org/Offer">
        <meta itemprop="priceCurrency" content="{{ shop.currency }}" />
        {% if product.available %}
        <link itemprop="availability" href="http://schema.org/InStock" />
        {% else %}
        <link itemprop="availability" href="http://schema.org/OutOfStock" />
        {% endif %}
          {% assign variant = product.selected_or_first_available_variant %}
          {% if product.compare_at_price > product.price %}
          <span class="product-price on-sale" itemprop="price">{{ variant.price | money }}</span>
          <s class="product-compare-price">{{ variant.compare_at_price | money }}</s>
          {% else %}
          <span class="product-price" itemprop="price">{{ variant.price | money }}</span>
          {% endif %}
      </div>
    </div>
  </div>
  <div class="product-form-fixed__right">

              <select id="product-select-{{ product.id }}-variant-{{ product.selected_or_first_available_variant.id }}" name="id"> 
                {% for variant in product.variants %}  
                <option{% if variant == product.selected_or_first_available_variant %} selected{% endif %} value="{{ variant.id }}">     
                  {{ variant.title }} - {{ variant.price | money }}    
                </option>  
                {% endfor %} 
              </select>
            {% if product.variants.size > 1 %}
             {% for option in product.options %}   
               {% include 'swatch2' with option %}
             {% endfor %}
            {% endif %}
    
    <div class="product-form__item--submit">
        <button id="add-{{ product.id }}" class="button shopify-payment-button__button add {% if settings.boldsubscriptions %}addtocart{% endif %}" type="submit">{{ add_to_cart | escape }}</button>
    </div>
    
  </div>
{% endform %}  
</div>  
  
<div class="product-info">  
  <div class="product-single__description">
     <div class="medium-up--hide">
     <div>
     <h1 class="product-single__title">{{ product.title }}
      </h1>
      <div class="product-price-wrap" id="product-price-{{ product.id }}" itemprop="offers" itemscope itemtype="http://schema.org/Offer">
        <meta itemprop="priceCurrency" content="{{ shop.currency }}" />
        {% if product.available %}
        <link itemprop="availability" href="http://schema.org/InStock" />
        {% else %}
        <link itemprop="availability" href="http://schema.org/OutOfStock" />
        {% endif %}
          {% assign variant = product.selected_or_first_available_variant %}
          {% if product.compare_at_price > product.price %}
          <span class="product-price on-sale" itemprop="price">{{ variant.price | money }}</span>
          <s class="product-compare-price">{{ variant.compare_at_price | money }}</s>
          {% else %}
          <span class="product-price" itemprop="price">{{ variant.price | money }}</span>
          {% endif %}
      </div>
      </div>
       <hr>
    </div>
    <div class="flex reviews-final-sale">
      
      {% if settings.stamped %}   
        <span class="stamped-product-reviews-badge stamped-main-badge" data-id="{{ product.id }}" data-product-sku="{{ product.handle }}" data-product-type="{{product.type}}" data-product-title="{{product.title}}"  style="display: inline-block;">{{ product.metafields.stamped.badge }}</span>
      {% endif %}
                     
      {% if settings.loox %}    
      {% if product.metafields.loox.num_reviews %}
	    <div itemprop="aggregateRating" itemscope itemtype="http://schema.org/AggregateRating">
		 <meta itemprop="ratingValue" content="{{ product.metafields.loox.avg_rating }}"/>
		 <meta itemprop="reviewCount" content="{{ product.metafields.loox.num_reviews }}"/>
	    </div>
      {% endif %}  
      {% endif %} 
                     
      {% if settings.yotpoappkey != blank %}           
  <div class="yotpo bottomLine"
    data-appkey="{{ settings.yotpoappkey }}"
    data-domain="{{shop.permanent_domain | escape }}"
    data-product-id="{{ product.id }}"
    data-product-models="{{ product.id }}"
    data-name="{{ product.title | escape }}"
    data-url="{{ shop.url }}{{ product.url }}"
    data-image-url="{{ product.featured_image | product_img_url: 'large' |replace: '?', '%3F' | replace: '&','%26'}}"
    data-description="{{ product.description | escape }}"
    data-bread-crumbs="{% for tag in product.tags %}{{ tag | escape }};{% endfor %}">
 </div>              
      {% endif %} 
    </div>
    <div class="row">
      <div class="large-6 columns desc">
        <h4>Description</h4>
        <div class="inner">{{ product.description | replace: '<iframe','<div class="flex-video widescreen youtube"><iframe' | replace: '</iframe>','</iframe></div>' }}</div>
      </div>
      <div class="large-6 columns additional">
        {% section 'pp2-fit' %}
        <h4>Returns</h4>
        <p>Please read our <a href="{{ shop['refund_policy'].url }}">return policy</a>.</p>
        <h4>Shipping</h4>
        <p>For more information on shipping <a href="{{ shop['shipping_policy'].url }}">shipping policy</a>.</p>
        <h4>Share</h4>
          <ul class="social-sharing ">
            <li>
              <a class="share-facebook" href="//www.facebook.com/sharer.php?u={{ shop.url }}{{ variant.url }}">
              <svg class="icon icon-facebook" version="1.1" id="Layer_1" focusable="false" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" viewBox="0 0 20 20" style="enable-background:new 0 0 20 20;" xml:space="preserve">
            
                <path d="M15.1,3.5h-1.9c-1.4,0-1.8,0.7-1.8,1.7v2.2h3.5l-0.4,3.5h-2.9v8.9H7.9v-8.8h-3V7.4h3V4.9c0-3,1.9-4.6,4.5-4.6
           c1.2,0,2.4,0.1,2.7,0.2V3.5z"></path>
                </svg> 
              </a>
            </li>
            <li>
              <a class="share-twitter" href="//twitter.com/share?text={{ product.title | escape }} {{ variant.title | escape }}&amp;url={{ shop.url }}{{ variant.url }}">
               <svg aria-hidden="true" focusable="false" role="presentation" class="icon icon-twitter" viewBox="0 0 20 20"><title>Twitter</title><path d="M19.551 4.208q-.815 1.202-1.956 2.038 0 .082.02.255t.02.255q0 1.589-.469 3.179t-1.426 3.036-2.272 2.567-3.158 1.793-3.963.672q-3.301 0-6.031-1.773.571.041.937.041 2.751 0 4.911-1.671-1.284-.02-2.292-.784T2.456 11.85q.346.082.754.082.55 0 1.039-.163-1.365-.285-2.262-1.365T1.09 7.918v-.041q.774.408 1.773.448-.795-.53-1.263-1.396t-.469-1.864q0-1.019.509-1.997 1.487 1.854 3.596 2.924T9.81 7.184q-.143-.509-.143-.897 0-1.63 1.161-2.781t2.832-1.151q.815 0 1.569.326t1.284.917q1.345-.265 2.506-.958-.428 1.386-1.732 2.18 1.243-.163 2.262-.611z"></path></svg>
              </a>
            </li>
            <li>
           <a target="_blank" href="//pinterest.com/pin/create/button/?url={{ shop.url }}{{ variant.url }}&amp;media={% for media in product.media %}{% case media.media_type %}{{ media | product_img_url: '1024x1024' }}{% break %}{% endcase %}{% endfor %}&amp;description={{product.title | escape }} {{ variant.title | escape }}" class="share-pinterest" rel="noopener">
        <svg aria-hidden="true" focusable="false" role="presentation" class="icon icon-pinterest" viewBox="0 0 20 20"><title>Pinterest</title><path d="M9.958.811q1.903 0 3.635.744t2.988 2 2 2.988.744 3.635q0 2.537-1.256 4.696t-3.415 3.415-4.696 1.256q-1.39 0-2.659-.366.707-1.147.951-2.025l.659-2.561q.244.463.903.817t1.39.354q1.464 0 2.622-.842t1.793-2.305.634-3.293q0-2.171-1.671-3.769t-4.257-1.598q-1.586 0-2.903.537T5.298 5.897 4.066 7.775t-.427 2.037q0 1.268.476 2.22t1.427 1.342q.171.073.293.012t.171-.232q.171-.61.195-.756.098-.268-.122-.512-.634-.707-.634-1.83 0-1.854 1.281-3.183t3.354-1.329q1.83 0 2.854 1t1.025 2.61q0 1.342-.366 2.476t-1.049 1.817-1.561.683q-.732 0-1.195-.537t-.293-1.269q.098-.342.256-.878t.268-.915.207-.817.098-.732q0-.61-.317-1t-.927-.39q-.756 0-1.269.695t-.512 1.744q0 .39.061.756t.134.537l.073.171q-1 4.342-1.22 5.098-.195.927-.146 2.171-2.513-1.122-4.062-3.44T.59 10.177q0-3.879 2.744-6.623T9.957.81z"></path></svg>
      </a>
            </li>
          </ul>
      </div>
    </div>
  </div>
</div>  
  
  
{% section 'Also-Like' %}  
  
  
  
{% if settings.yotpoappkey != blank %}
<div class="big row">
  <div class="column large-12">
    <h2 class="h2"><span>Reviews</span></h2>
    <div class="yotpo yotpo-main-widget" data-product-id="{{ product.id }}" data-name="{{ product.title | escape }}" data-url="{{ shop.url }}{{ product.url }}" data-image-url="{{ product.featured_image | product_img_url: "large" |replace: '?', '%3F' | replace: '&','%26'}}" data-description="{{ product.description | escape }}"></div>
  </div>
</div>  
<script>
  function deferYotpo(methodYotpo) {
    if (window.yotpo) {
        methodYotpo();
    } else {
        setTimeout(function() { deferYotpo(methodYotpo) }, 4);
    }
}
deferYotpo(function () {
  setTimeout(function() {
   var api = new Yotpo.API(yotpo);
   api.refreshWidgets();
  },4);
});    
</script>
{% endif %}
{% comment %}{% section 'Yotpo' %}{% endcomment %}    
  
  
  
</div>



<script>
  var callbackGallery_{{ product.id }} = function(){
  // Handler when the DOM is fully loaded
  if(!window.Swiper) {
    // add script
    var script = document.createElement("script");
    script.type = "text/javascript";   
    script.src = 'https://cdn.jsdelivr.net/npm/swiper@{{ settings.swiperjsversion }}/js/swiper.min.js';
    document.getElementsByTagName("head")[0].appendChild(script);
    // add style
    var style = document.createElement("link");
    style.type = "text/css";  
    style.rel = "stylesheet";
    style.href = 'https://cdn.jsdelivr.net/npm/swiper@{{ settings.swiperjsversion }}/css/swiper.min.css';
    document.getElementsByTagName("head")[0].appendChild(style);
  }
};

if (
    document.readyState === "complete" ||
    (document.readyState !== "loading" && !document.documentElement.doScroll)
) {
  callbackGallery_{{ product.id }}();
} else {
  document.addEventListener("DOMContentLoaded", callbackGallery_{{ product.id }});
}
    
function deferGallery_{{ product.id }}(methodGallery_{{ product.id }}) {
    if (window.Swiper) {
        methodGallery_{{ product.id }}();
    } else {
        setTimeout(function() { deferGallery_{{ product.id }}(methodGallery_{{ product.id }}) }, 4);
    }
}
deferGallery_{{ product.id }}(function () {   

var container = document.querySelector('#product-{{ product.id }}.variant-{{ product.selected_or_first_available_variant.id }} .swiper-container');


var swiper = new Swiper((container), {
    spaceBetween: 10,
    slidesPerView: '4',
    loop: false,
    direction: 'horizontal',
    navigation: {
        nextEl: container.querySelector('.swiper-button-next'),
        prevEl: container.querySelector('.swiper-button-prev'),
    },
    breakpoints: {
        0: {
            slidesPerView: '1',
            spaceBetween: 10,
            speed: 500,
        },    
        480: {
            slidesPerView: '2',
        },  
        767: {
            slidesPerView: '4',
        },
        1600: {
            slidesPerView: '4',
        }
    }
});  
});
          

// on scroll event
setTimeout(function() {          
scrollProduct();
window.addEventListener("scroll", scrollProduct);  
function scrollProduct() {
 var header = document.querySelector('#header');
 var headerheight = header.offsetHeight;
 var page = document.querySelector('#product-{{ product.id }}.variant-{{ product.selected_or_first_available_variant.id }}');
 var pageHeight = page.offsetHeight;
 var productForm = page.querySelector('form.product_form');
 var productInfo = productForm.closest('.product-page-2').querySelector('.product-info');
 var footer = page.querySelector('#footer');
 var footerHeight = footer.offsetHeight;  
 if (window.innerWidth > 767) {
  if(window.scrollY >= headerheight) {
   productForm.classList.add('product-form-fixed');
    productInfo.classList.add('product-form--is-fixed');
  }else{
   productForm.classList.remove('product-form-fixed');
    productInfo.classList.remove('product-form--is-fixed');
  }
  if(window.scrollY >= headerheight && window.scrollY > ((page.clientHeight - window.innerHeight) - footerHeight)) {
   productForm.classList.add('fade');
  }else{
   productForm.classList.remove('fade');
  }
 }else{
  productForm.classList.add('product-form-fixed');
   productInfo.classList.add('product-form--is-fixed');
 }
}
},4);
  
          

// start dropdown
initProductVariantsDropDown();        
function initProductVariantsDropDown() {
 var swatchContainers =  document.querySelectorAll('#product-{{ product.id }}.variant-{{ product.selected_or_first_available_variant.id }} .variant-select__wrap');                                                                      
 [].forEach.call(swatchContainers, function(container) {
   
        container.querySelector('.variant-select__selected').addEventListener('click', function(e) {
          var containerParent = e.target.closest('.variant-select__wrap');
          if(containerParent.classList.contains('is-showing')) {
          containerParent.classList.remove('is-showing');
          }else{
          containerParent.classList.add('is-showing');
          var siblings = getSiblings(containerParent);
           [].forEach.call(siblings, function(sibling) {  
            if(sibling.classList.contains('is-showing')) {
             sibling.classList.remove('is-showing');
            }
           });
          }
        });
   
        var swatchElements = container.querySelectorAll('.variant-select__option');
        [].forEach.call(swatchElements, function(swatchElement) {
         swatchElement.addEventListener('click', function(e) { 
         var container2 = e.currentTarget.closest('.variant-select__wrap');
         container2.classList.remove('is-showing');
         var optionIndex = swatchElement.getAttribute('data-option-index');
         var optionValue = swatchElement.querySelector('.variant-select__option-label').getAttribute('data-value');
         if(!container2.classList.contains('color')) {
           container2.querySelector('.variant-select__selected .variant-select__option-label').innerHTML = decodeURI(optionValue.replace(/\+/g, ' '));
         } 
         var thingitwants = swatchElement.closest('form').querySelectorAll('.single-option-selector')[optionIndex];
         thingitwants.value = decodeURI(optionValue.replace(/\+/g, ' '));
         thingitwants.onchange();   
         });
        });
 });                                                                                                 
}
var getSiblings = function (elem) {
	// Setup siblings array and get the first sibling
	var siblings = [];
	var sibling = elem.parentNode.firstChild;
	// Loop through each sibling and push to the array
	while (sibling) {
		if (sibling.nodeType === 1 && sibling !== elem) {
			siblings.push(sibling);
		}
		sibling = sibling.nextSibling
	}
	return siblings;
};               
       
          
var selectCallback = function(variant, selector) {
  
  var formEl = document.querySelector('#' + selector.domIdPrefix).closest('form');
  var pricewrapEl = formEl.querySelector('#product-price-{{ product.id }}');
  var priceEl = pricewrapEl.querySelector('.product-price');
  var backorderEl = formEl.querySelector('#backorder-{{ product.id }}');  
  var addToCartButton = formEl.querySelector('#add-{{ product.id }}');                                                                    
 if (variant) {
  
  for (var i = 0, length = variant.options.length; i < length; i++) {
   var radioButton = formEl.querySelector('.swatch[data-option-index="' + i + '"] input[value="' + encodeURI(variant.options[i]) + '"]');
   if (radioButton !== null) {
    radioButton.checked = true;
   }
  }
                           

   if (addToCartButton !== null) {
    addToCartButton.classList.remove('disabled');
    addToCartButton.disabled = false;
    addToCartButton.innerHTML = '{{ add_to_cart | escape }}';
   }   
   
   
  // Selected a valid variant that is available.
  if (variant.available) {    
   console.log(variant);
   // If item is backordered yet can still be ordered, we'll show special message.
   if (variant.inventory_management && variant.inventory_quantity <= 0) {
    var selectedVariant = formEl.querySelector('#selected-variant-{{ product.id }}');
    if (selectedVariant !== null) {
     selectedVariant.innerHTML = '{{ product.title | escape | json }}{% unless hide_default_title %} + ' - ' + variant.title{% endunless %}';
    }
    if (backorderEl !== null && backorderEl !== undefined) {
     backorderEl.classList.remove('hidden');
    }
   } else {
    if (backorderEl !== null && backorderEl !== undefined) {
     backorderEl.classList.add('hidden');
    }
   }

  } else {
   // Variant is sold out.
   if (backorderEl !== null && backorderEl !== undefined) {
    backorderEl.classList.add('hidden');
   }
   if (addToCartButton !== null && addToCartButton !== undefined) {
    addToCartButton.innerHTML = '{{ sold_out | escape }}';
    addToCartButton.classList.add('disabled');
    addToCartButton.disabled = true;
   }
  }


var multiselect = formEl.querySelector('#Multiselect_{{ product.id }}');   
if(!multiselect) { 
  
  priceEl.innerHTML = Shopify.formatMoney(variant.price, "{{ shop.money_format }}");                                   
  var compareEl = pricewrapEl.querySelector('.product-compare-price');
   if (variant.compare_at_price && variant.compare_at_price > variant.price) { 
     if (compareEl == null) {
         var compareEl = document.createElement("s");
         compareEl.classList.add('product-compare-price');
         pricewrapEl.append(compareEl);
     }
         compareEl.innerHTML = Shopify.formatMoney(variant.compare_at_price, "{{ shop.money_format }}");
     }else{
         if(compareEl) {
            compareEl.remove();
         }                                                 
     }
   
   }
   
  {% if settings.quadpay %} 
  {% assign new_money_format = shop.money_format | remove: '$' %}
  var quadpayWidget = formEl.querySelector('quadpay-widget');
  quadpayWidget.setAttribute('amount', Shopify.formatMoney(variant.price, "{{ new_money_format }}")); 
  {% endif %}

 } else {
                                                        
  // variant doesn't exist.
  priceEl.innerHTML = '';
  if (compareEl != null) {
   compareEl.innerHTML = '';
  }
   if (backorderEl !== null && backorderEl !== undefined) {
   backorderEl.classList.add('hidden');
  }
  if (addToCartButton !== null) {
   addToCartButton.innerHTML = '{{ unavailable | escape }}';
   addToCartButton.classList.add('disabled');
   addToCartButton.disabled = true;
  }
 }

}; 
  
Shopify.handleize = function (str) {
    return str.toLowerCase().replace(/[^\w\u00C0-\u024f]+/g, "-").replace(/^-+|-+$/g, "");
};  

// run defer for option selector  
  var callbackProduct{{ product.id }} = function(){
  // Handler when the DOM is fully loaded
  if(!Shopify.OptionSelectors) {
    // add script
    var script = document.createElement("script");
    script.type = "text/javascript";   
    script.src = '{{ 'option_selection.js' | asset_url }}';
    document.getElementsByTagName("head")[0].appendChild(script);
  }
};

if (
    document.readyState === "complete" ||
    (document.readyState !== "loading" && !document.documentElement.doScroll)
) {
  callbackProduct{{ product.id }}();
} else {
  document.addEventListener("DOMContentLoaded", callbackProduct{{ product.id }});
}
    
function deferProduct{{ product.id }}(methodProduct{{ product.id }}) {
    if (Shopify.OptionSelectors) {
        methodProduct{{ product.id }}();
    } else {
        setTimeout(function() { deferProduct{{ product.id }}(methodProduct{{ product.id }}) }, 4);
    }
}
deferProduct{{ product.id }}(function () {    
  

new Shopify.OptionSelectors('product-select-{{ product.id }}-variant-{{ product.selected_or_first_available_variant.id }}', {
 product: {{ product | json }},
 onVariantSelected: selectCallback,
 enableHistoryState: false
}); 
  
});           
          
       
</script>
